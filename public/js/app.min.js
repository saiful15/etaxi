"use strict";!function(){angular.module("etaxi",["ngResource","ngRoute","720kb.datepicker","chart.js"]).config(["$routeProvider","$locationProvider",function(e,l){e.when("/",{templateUrl:"home/home.view.html",controller:"homeCtrl",controllerAs:"hmvm"}).when("/services",{templateUrl:"services/services.view.html",controller:"servicesCtrl",controllerAs:"srvm"}).when("/price",{templateUrl:"price/price.view.html",controller:"priceCtrl",controllerAs:"prvm"}).when("/aboutus",{templateUrl:"aboutus/aboutus.view.html"}).when("/contactus",{templateUrl:"contactus/contactus.view.html",controller:"contactusCtrl",controllerAs:"ctvm"}).when("/signup",{templateUrl:"signup/signup.view.html",controller:"signCtrl",controllerAs:"sgnvm"}).when("/signin",{templateUrl:"signin/signin.view.html",controller:"signinCtrl",controllerAs:"lgvm"}).when("/dashboard",{templateUrl:"dashboard/dashboard.view.html",controller:"dashboardCtrl",controllerAs:"dsvm"}).when("/businessprofile",{templateUrl:"dashboard/businessprofile/businessprofile.view.html",controller:"businessProfileCtrl",controllerAs:"bsvm"}).when("/serviceplan",{templateUrl:"dashboard/serviceplan/serviceplan.view.html",controller:"servicePlanCtrl",controllerAs:"srvm"}).when("/income",{templateUrl:"dashboard/income/income.view.html",controller:"incomeCtrl",controllerAs:"invm"}).when("/allincomestatements",{templateUrl:"dashboard/allincomestatements/allincomestatements.view.html",controller:"allincomeStatmentController",controllerAs:"inStmt"}).when("/expense",{templateUrl:"dashboard/expense/expense.view.html",controller:"expenseCtrl",controllerAs:"exvm"}).when("/allexpenses",{templateUrl:"dashboard/allexpenses/allexpenses.view.html",controller:"allexpensesCtrl",controllerAs:"exlVm"}).when("/financialstatement",{templateUrl:"dashboard/financialstatement/financialstatement.view.html",controller:"financeCtrl",controllerAs:"fstvm"}).when("/settings",{templateUrl:"dashboard/settings/settings.view.html",controller:"settingsCtrl",controllerAs:"stvm"}).when("/profile",{templateUrl:"profile/profile.view.html",controller:"profileCtrl",controllerAs:"prvm"}).when("/forgotpassword",{templateUrl:"forgotpassword/forgotpassword.view.html",controller:"forgotPasswordController",controllerAs:"frp"}).when("/messages",{templateUrl:"messages/messages.view.html",controller:"msgController",controllerAs:"msgvm"}).when("/appcontrol",{templateUrl:"appcontrol/appcontrol.view.html",controller:"ctrlController",controllerAs:"cvm"}).when("/appcontrol/users/:userid",{templateUrl:"appcontrol/users/user.view.html",controller:"usrManageCtrl",controllerAs:"uvm"}).when("/appcontrol/accountant/:accountantId",{templateUrl:"appcontrol/accountant/accountant.view.html",controller:"accountantCtrl",controllerAs:"acvm"}).when("/taxreturn",{templateUrl:"appcontrol/taxreturn/taxreturn.view.html",controller:"taxController",controllerAs:"txvm"}).when("/docs",{templateUrl:"profile/docs/docs.view.html",controller:"docsCtrl",controllerAs:"dcvm"}),l.html5Mode({enabled:!0})}])}();
"use strict";!function(){function t(t,e){var n=function(e){t.localStorage.etaxitkn=e},r=function(){return t.localStorage.etaxitkn},o=function(){var e,n=r();return!!n&&(e=n.split(".")[1],e=t.atob(e),e=JSON.parse(e))};return{currentUser:function(){if(o()){var e=r().split(".")[1];return e=t.atob(e),e=JSON.parse(e),{userId:e._id,email:e.email,name:e.name,userDirId:e.userId,account_type:e.account_type}}return!1},saveToken:n,getToken:r,isLoggedIn:o,register:function(t){return e.post("/api/register",t).success(function(t){n(t.token)})},login:function(t){return e.post("/api/login",t).success(function(t){n(t.token)})},logout:function(){t.localStorage.removeItem("etaxitkn")}}}angular.module("etaxi").service("authentication",t),t.$inject=["$window","$http"]}();
"use strict";!function(){function t(t){function e(t){return t}function n(t){return t}return{showUsers:function(){return t.get("/api/users").then(e).catch(n)},searchUser:function(c){return t.get("/api/"+c+"/search").then(e).catch(n)},showUser:function(c){return t.get("/api/"+c+"/user").then(e).catch(n)},checkAccountantCollection:function(){return t.get("/api/checkaccountantcollection").then(e).catch(n)},updateLoginAccountantCreation:function(c){return t.put("/api/"+c+"/updatelogincreation").then(e).then(n)},addAccountant:function(c){return t.post("/api/addaccountant",c).then(e).catch(n)},createAccountantLogin:function(c){return t.post("/api/createaccountantlogin",c).then(e).catch(n)},getUserStatus:function(c){return t.get("/api/userstatus/"+c).then(e).catch(n)},saveProfile:function(c,a){return t.post("/api/saveprofile/"+c,a).then(e).catch(n)},updateUserStatus:function(c){return t.post("/api/userstatus/",c).then(e).catch(n)},getProfile:function(c){return t.get("/api/userprofile/"+c).then(e).catch(n)},updateAddress:function(c,a){return t.post("/api/updateaddress/"+c,a).then(e).catch(n)},addExpense:function(c,a){return t.post("/api/addexpense/"+c,a).then(e).catch(n)},showExpenseSummary:function(c){return t.get("/api/showexpense/"+c).then(e).catch(n)},addIncome:function(c,a){return t.post("/api/"+c+"/addincome",a).then(e).catch(n)},showIncome:function(c){return t.get("/api/"+c+"/showincome").then(e).catch(n)},showSinlgeExpense:function(c,a){return t.get("/api/"+c+"/"+a+"/expense").then(e).catch(n)},showEstimatedTax:function(c){return t.get("/api/"+c+"/showestimatedtax").then(e).catch(n)},deleteIncome:function(c,a){return t.delete("/api/"+c+"/"+a+"/deleteincome").then(e).catch(n)},showSingleIncome:function(c,a){return t.get("/api/"+c+"/getincome/"+a).then(e).catch(n)},updateIncomeStatement:function(c,a,i){return t.patch("/api/"+c+"/updateincome/"+a,i).then(e).catch(n)},addAdditionalInformation:function(c,a){return t.post("/api/addaditionalinfo/"+c,a).then(e).catch(n)},addContactDetails:function(c,a){return t.post("/api/"+c+"/addcontact/",a).then(e).catch(n)},showContact:function(c){return t.get("/api/showcontact/"+c).then(e).catch(n)},addBusinessInfo:function(c,a){return t.post("/api/"+c+"/addbusinessinfo/",a).then(e).catch(n)},showBusinessBasic:function(c){return t.get("/api/"+c+"/showbusinessinfo").then(e).catch(n)},addVehicleInfo:function(c,a){return t.post("/api/"+c+"/addvehicle",a).then(e).catch(n)},showVehicle:function(c){return t.get("/api/"+c+"/showvehicle").then(e).catch(n)},addInsurance:function(c,a){return t.post("/api/"+c+"/insurance",a).then(e).catch(n)},showInsurance:function(c){return t.get("/api/"+c+"/insurance").then(e).catch(n)},addLisence:function(c,a){return t.post("/api/"+c+"/lisence",a).then(e).catch(n)},userLisence:function(c){return t.get("/api/"+c+"/lisence").then(e).catch(n)},exportToCSV:function(c,a){return t.get("/api/"+c+"/"+a).then(e).catch(n)},loadUserContact:function(c){return t.get("/api/"+c+"/contacts").then(e).catch(n)},adminContact:function(){return t.get("/api/allcontacts").then(e).catch(n)},sendMessage:function(c){return t.post("/api/message",c).then(e).catch(n)},viewAllMessage:function(c){return t.get("/api/"+c+"/messages").then(e).catch(n)},viewSingleMessage:function(c){return t.get("/api/"+c).then(e).catch(n)},sendReply:function(c,a){return t.post("/api/"+c+"/replymessage",a).then(e).catch(n)},viewAllSentMessage:function(c){return t.get("/api/"+c+"/sentmessages").then(e).catch(n)},showExpenseFile:function(c,a){return t.get("/api/expense/"+c+"/"+a).then(e).catch(n)},accountantProfile:function(c){return t.get("/api/accountant/"+c).then(e).catch(n)},getSingleCustomerDetails:function(c){return t.get("/api/"+c+"/showuser").then(e).catch(n)},createDocument:function(c){return t.post("/api/createdoc",c).then(e).catch(n)},checkDocuments:function(c){return t.get("/api/"+c+"/checkdocs").then(e).catch(n)},generateAccountStatement:function(c,a){return t.get("/api/"+c+"/"+a+"/generatestatement").then(e).catch(n)}}}angular.module("etaxi").service("userservice",t),t.$inject=["$http"]}();
"use strict";!function(){function n(n){function t(n){return n}function c(n){return n}return{accountants:function(){return n.get("/api/accountants").then(t).catch(c)},assignAccountantToUser:function(a,u){return n.post("/api/"+u+"/"+a+"/assignaccountant").then(t).catch(c)}}}angular.module("etaxi").service("adminoperation",n),n.$inject=["$http"]}();
"use strict";!function(){function t(t){function n(t){return t}function e(t){return t}return{getCustomers:function(c){return t.get("api/"+c+"/customers").then(n).catch(e)},AccountantProfile:function(c){return t.get("/api/"+c+"/profile").then(n).catch(e)},editBasicContact:function(c){return t.post("/api/editcontact",c).then(n).catch(e)},editCompany:function(c){return t.post("/api/editcompany",c).then(n).catch(e)},getCustomer:function(c){return t.get("api/"+c+"/custmer").then(n).catch(e)}}}angular.module("etaxi").service("AccountantService",t),t.$inject=["$http"]}();
"use strict";!function(){function t(t){function n(t){return t}function e(t){return t}return{uploadProductFile:function(a,o,u){var r=new FormData;return r.append("accountImg",a),t.post("/api/fileupload/"+o+"/"+u,r,{transformRequest:angular.identity,headers:{"Content-Type":void 0}}).then(n).catch(e)},uploadAccountDocs:function(a,o,u){var r=new FormData;return r.append("accountDocs",a),t.post("/api/docupload/"+o+"/"+u,r,{transformRequest:angular.identity,headers:{"Content-Type":void 0}}).then(n).catch(e)}}}angular.module("etaxi").service("fileupload",t),t.$inject=["$http"]}();
"use strict";!function(){function t(t){function n(t){return t}function e(t){return t}return{contactMessage:function(c){return t.post("/api/contact",c).then(n).catch(e)}}}angular.module("etaxi").service("systemService",t),t.$inject=["$http"]}();
"use strict";!function(){function t(t){function n(t){return t}function e(t){return t}return{passwordResetLink:function(r,u){return t.post("/api/"+r+"/"+u+"/passwordresetlink").then(n).catch(e)},validateResetKey:function(r,u,c){return t.get("/api/"+c+"/"+r+"/"+u).then(n).catch(e)},updatePassword:function(r,u,c){return t.put("/api/"+r+"/"+u+"/"+c).then(n).catch(e)}}}angular.module("etaxi").service("account",t),t.$inject=["$http"]}();
"use strict";!function(){angular.module("etaxi").directive("siteNav",function(){return{restrict:"EA",templateUrl:"common/directives/navigation/navigation.template.html",controller:"navCtrl as nvm"}})}();
"use strict";!function(){function t(t,n,e){this.loggedIn=n.isLoggedIn(),this.logout=function(){n.logout(),t.path("/signin")},n.isLoggedIn()&&(this.forLoggedInUser=!0,this.accountType=n.currentUser().account_type,this.name=n.currentUser().name)}angular.module("etaxi").controller("navCtrl",t),t.$inject=["$location","authentication","userservice"]}();
"use strict";!function(){angular.module("etaxi").directive("siteFooter",function(){return{restrict:"EA",templateUrl:"common/directives/site-footer/sitefooter.template.html"}})}();
"use strict";!function(){function i(i){return{restrict:"A",link:function(n,e,t){var c=i(t.fileModel).assign;e.bind("change",function(){n.$apply(function(){c(n,e[0].files[0])})})}}}angular.module("etaxi").directive("fileModel",i),i.$inject=["$parse"]}();
"use strict";!function(){angular.module("etaxi").directive("adminContacts",function(){return{restrict:"EA",templateUrl:"common/directives/admincontacts/admincontacts.template.html",controller:"adminContactsCtrl as adcon"}})}();
"use strict";!function(){function t(t,n){var c=this;c.ContactType=n.currentUser().account_type,"admin"===c.ContactType?(c.loadAllContact=!0,c.loadAccountantContact=!0,c.loadCustomerContact=!1):"accountant"===c.ContactType&&(c.loadAllContact=!1,c.loadCustomerContact=!0,c.loadAccountantContact=!1),c.loadAdminContacts=function(){t.adminContact().then(function(t){c.loadAccountantContact=!0,c.customers=t.data.contacts.filter(function(t){return"customer"===t.account_type}),c.accountants=t.data.contacts.filter(function(t){return"accountant"===t.account_type})}).catch(function(t){alert(t)})}}angular.module("etaxi").controller("adminContactsCtrl",t),t.$inject=["userservice","authentication"]}();
"use strict";!function(){angular.module("etaxi").controller("homeCtrl",function(){angular.element(document).ready(function(){App.init(),App.initParallaxBg(),FancyBox.initFancybox(),OwlCarousel.initOwlCarousel(),StyleSwitcher.initStyleSwitcher(),RevolutionSlider.initRSfullWidth()})})}();
"use strict";!function(){angular.module("etaxi").controller("servicesCtrl",function(){})}();
"use strict";!function(){angular.module("etaxi").controller("priceCtrl",function(){})}();
"use strict";!function(){function e(e){var r=this;r.message={name:"",email:"",body:""},r.sendMessage=function(){e.contactMessage(r.message).then(function(e){e.data.error?(r.messageError=!0,r.messageErrorMsg=e.data.error):(r.messageError=!1,r.messageErrorMsg="We have received your request. We will be in touch soon")}).catch(function(e){return alert(e)})}}angular.module("etaxi").controller("contactusCtrl",e),e.$inject=["systemService"]}();
"use strict";!function(){function r(r,e){var o=this;o.newuser={name:"",email:"",password:""},o.error=!1,o.createAccount=function(){o.newuser.email&&o.newuser.password?(o.error=!1,o.doRegister()):(o.error=!0,o.errorMessage="All fields are required. Must not be empty")},o.doRegister=function(){e.register(o.newuser).error(function(r){o.error=!0,o.errorMessage=r.error}).then(function(e){r.path("/dashboard")})},e.isLoggedIn()&&r.path("/dashboard")}angular.module("etaxi").controller("signCtrl",r),r.$inject=["$location","authentication"]}();
"use strict";!function(){function r(r,e){var o=this;o.user={email:"",password:""},o.error=!1,o.letLogin=function(){o.user.email&&o.user.password?(o.error=!1,o.doLogin()):(o.error=!0,o.errorMessage="All fields required. Must not be empty")},o.doLogin=function(){r.login(o.user).error(function(r){o.error=!0,o.errorMessage=r.error}).then(function(){e.path("/dashboard")})},r.isLoggedIn()&&e.path("/dashboard")}angular.module("etaxi").controller("signinCtrl",r),r.$inject=["authentication","$location"]}();
"use strict";!function(){function r(r,s,e,a){var t=this;e.v&&e.hack&&e.for?(t.passResetForm=!0,t.passResetRequest=!1):(t.passResetRequest=!0,t.passResetForm=!1),t.user={email:""},t.checkUser=function(){if(!t.user.email)return t.resetPassError=!0,void(t.resetPassErrorMsg="Please enter email address first");t.loading=!0,t.btnDisabled=!0,r.showUser(t.user.email).then(function(r){r.data.error?(t.resetPassError=!0,!0===r.data.error.isJoi?t.resetPassErrorMsg=r.data.error.details[0].message:t.resetPassErrorMsg=r.data.error):(t.resetPassError=!1,setTimeout(function(){s.passwordResetLink(t.user.email,r.data.user._id).then(function(r){r.data.error?(t.resetPassError=!0,t.resetPassErrorMsg=r.data.error):(t.loading=!1,t.btnDisabled=!1,t.resetPassError=!1,t.resetSuccessLink=!0,t.resetPassSuccessMsg="We have sent you a password reset link. Please check your email")}).catch(function(r){return alert(r)})},3e3))}).catch(function(r){return alert(r)})},t.validateKey=function(){s.validateResetKey(e.v,e.hack,e.for).then(function(r){!0===r.data.success?t.passwordChangeOn=!0:t.passwordChangeOn=!1}).catch(function(r){return alert(r)})},t.newpasswordinfo={newpassword:"",repeatpassword:""},t.updatePassword=function(){t.newpasswordinfo.newpassword!==t.newpasswordinfo.repeatpassword?(t.updatePassError=!0,t.updatePassErrorMsg="Error! New password and Repeat Password doesn't match."):s.updatePassword(e.for,t.newpasswordinfo.newpassword,t.newpasswordinfo.repeatpassword).then(function(r){r.data.error?(t.updatePassError=!0,t.updatePassErrorMsg=r.data.error):!0===r.data.success&&(t.updatePassError=!1,a.path("/signin"))}).catch(function(r){return alert(r)})}}angular.module("etaxi").controller("forgotPasswordController",r),r.$inject=["userservice","account","$routeParams","$location"]}();
"use strict";!function(){function t(t,a,n,e,o){var r=this;t.isLoggedIn()?(r.AccountType=t.currentUser().account_type,r.getUserStatusCollection=function(){n.getUserStatus(t.currentUser().email).then(function(a){a.data.error?r.profileLoadError=!0:a.data.status&&(r.profileLoadError=!1,r.profileOn=a.data.status.statusCollection[0].profile,r.additionInfo=a.data.status.statusCollection[0].additional_info,n.getProfile(t.currentUser().email).then(function(t){t.data.error?(r.personalProfile=!0,r.addressEditForm=!1):t.data.success&&(r.addressEditForm=!1,r.personalProfile=!1,r.showPersonalProfile=!0,r.personProfileDetails=t.data.profile,r.showAddress=!0)}).catch(function(t){alert(t)}))}).catch(function(t){alert(t)})},r.editAddress=function(){r.showAddress=!1,r.addressEditForm=!0},r.personDetails={house_number:"",street_name:"",post_code:"",city:"",county:""},r.saveAddressChange=function(t){r.personDetails.house_number&&r.personDetails.street_name&&r.personDetails.post_code&&r.personDetails.city&&r.personDetails.county?(r.editAddressError=!1,n.updateAddress(t,r.personDetails).then(function(t){t.data.error?(r.editAddressError=!0,r.erroMessage=t.data.error):t.data.success&&(r.editAddressError=!1,e.reload())}).catch(function(t){alert(t)})):(r.editAddressError=!0,r.erroMessage="Error! All fields are required")},r.cancelAddressForm=function(){r.showAddress=!0,r.addressEditForm=!1},r.AccountantBasicContactEditOn=!1,r.AccountantCompanyEditOn=!1,r.LoadAccountantProfile=function(){o.AccountantProfile(t.currentUser().email).then(function(t){t.data.error?r.AccoutantLoadError=!0:(r.AccoutantLoadError=!1,r.accountant=t.data.accountant)}).catch(function(t){alert(t)})},r.editAccountantBasicContact=function(){r.AccountantBasicContactEditOn=!0},r.cancelAccountantBasicContact=function(){r.AccountantBasicContactEditOn=!1},r.saveAccountantBasicContact=function(){var a={name:r.accountant.name,mobile:r.accountant.mobile,email:t.currentUser().email};o.editBasicContact(a).then(function(t){t.data.error?(r.AccountantBasicSaveError=!0,r.AccountantBasicSaveErrorMsg=t.data.error):t.data.success&&(r.AccountantBasicSaveError=!1,e.reload())}).catch(function(t){alert(t)})},r.editAccountantCompany=function(){r.AccountantCompanyEditOn=!0},r.cancelAccountantCompany=function(){r.AccountantCompanyEditOn=!1},r.saveAccountantCompany=function(){var a={name:r.accountant.company[0].name,address:r.accountant.company[0].address,email:r.accountant.company[0].email,useremail:t.currentUser().email,website:"http://"+r.accountant.company[0].website,Tel:r.accountant.company[0].tel};o.editCompany(a).then(function(t){t.data.error?(r.AccountantCompanySaveError=!0,r.AccountantCompanySaveErrorMsg=t.data.error):(r.AccountantCompanySaveError=!1,e.reload())}).catch(function(t){alert(t)})}):a.path("/signin")}angular.module("etaxi").controller("profileCtrl",t),t.$inject=["authentication","$location","userservice","$route","AccountantService"]}();
"use strict";!function(){function r(r,e,o,t,s){var a=this;r.isLoggedIn()?"customer"===r.currentUser().account_type?(a.customerOpr=!0,a.adminOpr=!1,a.accountantOpr=!1,a.getUserStatus=function(){o.getUserStatus(r.currentUser().email).then(function(r){r.data.error?(a.statusError=!0,a.statusErrorMessage=r.data.error):r.data.status&&(a.statusCollection=r.data.status.statusCollection)}).catch(function(r){alert(r)})},a.getUserStatus(),a.userProfile={first_name:"",last_name:"",house_no:"",street_name:"",city_name:"",county:"",postcode:""},a.createProfile=function(){a.showAjaxLoader=!0,a.btnDisabled=!0,a.userProfile.first_name&&a.userProfile.last_name&&a.userProfile.house_no&&a.userProfile.street_name&&a.userProfile.city_name&&a.userProfile.county&&a.userProfile.postcode?(a.profileError=!1,setTimeout(function(){a.showAjaxLoader=!1,a.btnDisabled=!1,o.saveProfile(r.currentUser().email,a.userProfile).then(function(e){if(e.data.error)a.profileError=!0,a.profileErrorMessage=e.data.error;else if(e.data.profile){a.profileError=!1,a.profileSuccess=!0,a.successMessage="Your profile successfully created";var o={update_at:"profile",email:r.currentUser().email,status:!0};!1===a.updateStatus(o)?(a.profileError=!0,a.profileErrorMessage="Something went wrong, updating your profile. Please contact admin"):a.getUserStatus()}}).catch(function(r){alert(r)})},500)):(a.profileError=!0,a.profileErrorMessage="All fields are required. Must not be empty",a.showAjaxLoader=!1,a.btnDisabled=!1)},a.updateStatus=function(r){var e=void 0;return o.updateUserStatus(r).then(function(r){e=!0===r.data.updated}).catch(function(r){alert(r)}),e}):"admin"===r.currentUser().account_type?(a.adminOpr=!0,a.accountantOpr=!1,a.singleProfileOn=!1,a.singleStatusOn=!1,a.singleDocOn=!1,a.search={user:""},a.searchUser=function(){o.searchUser(a.search.user).then(function(r){r.data.error?(a.searchUserError=!0,a.searchUserErrorMsg=r.data.error):(a.searchUserError=!1,a.usersList=r.data.results)}).catch(function(r){a.searchUserError=!0,a.searchUserErrorMsg=r})},a.loadUserDetails=function(){s.v?o.getSingleCustomerDetails(s.v).then(function(r){console.log(r),r.data.error?(a.singleUserDetailsError=!0,a.singleUserDetailsErrorMsg=r.data.error):(a.singleProfileOn=!0,a.singleUserDetailsError=!1,a.singlUser=r.data.user)}).catch(function(r){a.singleUserDetailsError=!0,a.singleUserDetailsErrorMsg=r}):(a.singleUserDetailsError=!0,a.singleUserDetailsErrorMsg="Route not allowed")},a.loadProfile=function(){a.singleProfileOn=!0,a.singleStatusOn=!1,a.singleDocOn=!1},a.loadStatuses=function(){a.singleProfileOn=!1,a.singleStatusOn=!0,a.singleDocOn=!1},a.loadUserDoc=function(){a.singleProfileOn=!1,a.singleStatusOn=!1,a.singleDocOn=!0,o.checkDocuments(s.v).then(function(r){console.log(r),r.data.error?(a.singlDocLoadError=!0,a.singlDocLoadErrorMsg=r.data.error):0===r.data.doc.length?(a.singlDocLoadError=!0,a.singlDocLoadErrorMsg="This user has not uploaded any document yet"):(a.singlDocLoadError=!1,a.singlUserDoc=r.data.doc)}).catch(function(r){a.singlDocLoadError=!0,a.singlDocLoadErrorMsg=r})}):"accountant"===r.currentUser().account_type&&(a.accountantOpr=!0,a.loadCustomers=function(){t.getCustomers(r.currentUser().email).then(function(r){r.data.error?(a.loadCustomerError=!0,a.loadCustomerErrorMsg=r.data.error):(a.loadCustomerError=!1,a.assignedCustomers=r.data.customers)}).catch(function(r){return alert(r)})},a.LoadCustomerProfile=!1,s.cus&&(a.LoadCustomerProfile=!0,t.getCustomer(s.cus).then(function(r){r.data.error?(a.customerInfoLoadError=!0,a.customerInfoLoadErrorMsg=r.data.error):(a.customerInfoLoadError=!1,a.LoadedCustomer=r.data.userInfo)}).catch(function(r){alert(r)}),a.showCustomerIncome=!1,a.loadIncomeStatement=function(r){a.showCustomerIncome=!0,o.showIncome(r).then(function(r){r.data.error?(a.erroLoadingCustomerIncome=!0,a.erroLoadingCustomerIncomeMsg=r.data.error):(a.erroLoadingCustomerIncome=!1,a.CustomerIncome=r.data.data)}).catch(function(r){alert(r)})})):e.path("/signin")}angular.module("etaxi").controller("dashboardCtrl",r),r.$inject=["authentication","$location","userservice","AccountantService","$routeParams"]}();
"use strict";!function(){angular.module("etaxi").controller("businessProfileCtrl",function(){})}();
"use strict";!function(){function n(n,i){var t=this;n.isLoggedIn()?t.loadServicePlan=function(n){t.service_plan=!0,t.plan=n}:i.path("/signin")}angular.module("etaxi").controller("servicePlanCtrl",n),n.$inject=["authentication","$location"]}();
"use strict";!function(){function e(e,n,o){function r(e){var n=e.getDate(),o=e.getMonth()+1,r=e.getFullYear();return n<10&&(n="0"+n),o<10&&(o="0"+o),e=n+"-"+o+"-"+r}var t=this;t.Income={amount:"",incomeDate:"",income_source:""},t.addIncome=function(){t.Income.amount&&t.Income.income_source?(t.incomeError=!1,n.addIncome(e.currentUser().email,t.Income).then(function(e){!0===e.data.success&&(t.incomeError=!1,t.incomeSuccess=!0,t.successMgs="£ "+t.Income.amount+" Successfully added",t.showIncome())}).catch(function(e){alert(e)})):(t.incomeError=!0,t.incomeErrorMsg="All * fields are required")},t.showIncome=function(){t.initialError=!0,t.totalIncome=0;n.showIncome(e.currentUser().email).then(function(e){if(!0===e.data.success){t.initialError=!1,t.showTotalIncome=!0,t.incomeList=e.data.data;for(var n=0;n<t.incomeList.length;n++)t.totalIncome+=parseFloat(t.incomeList[n].income);var c=function(){for(var e=[],n=0;n<7;n++){var o=new Date;o.setDate(o.getDate()-n),e.push(r(o))}return e}(),a=c.map(function(e){return t.incomeList.filter(function(n){return n.incomeDate===e})});t.weeklyIncome=a.filter(function(e){return e.length>0});var i=t.weeklyIncome.map(function(e){return e.map(function(e){return e.income})}),u=i.map(function(e){return e[0]}),m=i.map(function(e){return e.reduce(function(e,n){return e+n},0)});t.sevendaysIncome=m.reduce(function(e,n){return e+n},0),o.colors=[{backgroundColor:"rgba(159,204,0, 0.2)",pointBackgroundColor:"rgba(159,204,0, 1)",pointHoverBackgroundColor:"rgba(159,204,0, 0.8)",borderColor:"rgba(159,204,0, 1)",pointBorderColor:"#fff",pointHoverBorderColor:"rgba(159,204,0, 1)"},"rgba(250,109,33,0.5)","#9a9a9a","rgb(233,177,69)"],o.labels=c,o.data=u}}).catch(function(e){return function(){alert(e)}})}}angular.module("etaxi").controller("incomeCtrl",e),e.$inject=["authentication","userservice","$scope"]}();
"use strict";!function(){function e(e,t,a,o){var n=this;e.isLoggedIn()?(n.showIncomeList=!0,n.showEditArea=!1,n.loadAllIncomeStatements=function(){t.showIncome(e.currentUser().email).then(function(e){if(!0===e.data.success){n.weHaveIncomes=!0,e.data.data.length<1&&(n.weHaveNoIncome=!0),n.incomesList=e.data.data;for(var t=0,a=0;a<n.incomesList.length;a++)t+=parseFloat(n.incomesList[a].income);n.totalIncomes=t}else e.data.error&&(n.weHaveIncomes=!1)}).catch(function(e){alert(e)})},n.editIncome=function(a){n.showEditArea=!0,n.showIncomeList=!1,t.showSingleIncome(e.currentUser().email,a).then(function(e){e.data.error?(n.editDataLoadError=!0,n.editDataLoadErrorMessage=e.data.error):!0===e.data.success&&(n.editDataLoadError=!1,n.incomeEdit={incomeDate:e.data.data[0].incomeDate,amount:e.data.data[0].income,income_source:e.data.data[0].incomeType})}).catch(function(e){alert(e)}),n.saveEditIncome=function(){n.incomeEdit.incomeDate&&n.incomeEdit.amount&&n.incomeEdit.income_source?(n.editFormValidationError=!1,t.updateIncomeStatement(e.currentUser().email,a,n.incomeEdit).then(function(e){!0===e.data.success?(n.showEditArea=!1,n.showIncomeList=!0):e.data.error&&(n.editFormValidationError=!0,n.editFormValidationErrorMessage=e.data.data.error)}).catch(function(e){alert(e)})):(n.editFormValidationError=!0,n.editFormValidationErrorMessage="All fields are requied. Must not be empty")}},n.cancelEdit=function(){n.showEditArea=!1,n.showIncomeList=!0},n.deleteStatement=function(a){t.deleteIncome(e.currentUser().email,a).then(function(e){!0===e.data.success?(n.loadAllIncomeStatements(),n.deletingError=!1):e.data.error&&(n.deletingError=!0)}).catch(function(e){alert(e)})}):a.path("/signin")}angular.module("etaxi").controller("allincomeStatmentController",e),e.$inject=["authentication","userservice","$location","$filter"]}();
"use strict";!function(){function e(e,n,r,t,s,u){var o=this;if(n.isLoggedIn()){var a=function(e){var n=e.getDate(),r=e.getMonth()+1,t=e.getFullYear();return n<10&&(n="0"+n),r<10&&(r="0"+r),e=n+"-"+r+"-"+t};o.expense={startDate:"",expense_sector:"",amount:"",documentId:"",documentDir:"",accountImg:""},o.addExpense=function(){o.expense&&o.expense.expense_sector&&o.expense.amount?(o.expenseError=!1,o.expense.accountImg=e.accountImg,console.log("file",o.expense.accountImg),o.expense.accountImg?(o.uploadInfo={documentId:n.currentUser().userId,userId:n.currentUser().userDirId},t.uploadProductFile(o.expense.accountImg,o.uploadInfo.documentId,o.uploadInfo.userId).then(function(e){!0===e.data.success?(o.expense.documentId=o.uploadInfo.documentId,o.expense.documentDir=e.data.fileLocation,o.pushExpense(),s.reload()):(o.expenseError=!0,o.errorMessage=e.data.error)}).catch(function(e){return alert(e)})):o.pushExpense()):(o.expenseError=!0,o.expenseSuccess=!1,o.errorMessage="All fields required. Must not be empty")},o.pushExpense=function(){r.addExpense(n.currentUser().email,o.expense).then(function(e){e.data.error?(o.expenseError=!0,o.errorMessage="Error while adding expenses for the user"):(o.expenseError=!1,o.expenseSuccess=!0,o.expenseSuccessMessage="£ "+o.expense.amount+" successfully added for "+o.expense.expense_sector,o.loadExpenseSummary())}).catch(function(e){alert(e)})},o.loadExpenseSummary=function(){r.showExpenseSummary(n.currentUser().email).then(function(e){if(!0===e.data.success){o.expenseSummaryError=!1,o.expenseSummarySuccess=!0,o.expensesList=e.data.expense;for(var n=0,r=0;r<o.expensesList.length;r++)n+=parseFloat(o.expensesList[r].amount);o.totalAmount=n;var t=function(){for(var e=[],n=0;n<7;n++){var r=new Date;r.setDate(r.getDate()-n),e.push(a(r))}return e}().map(function(e){return o.expensesList.filter(function(n){return n.startDate===e})});o.weeklyExpense=t.filter(function(e){return e.length>0});var s=o.weeklyExpense.map(function(e){return e.map(function(e){return e.amount})}).map(function(e){return e.reduce(function(e,n){return e+n},0)});o.weeklyTotalExpenses=s.reduce(function(e,n){return e+n},0)}else e.data.error&&(o.expenseSummaryError=!0)}).catch(function(e){alert(e)})},o.getExpenseFile=function(e){r.showExpenseFile(n.currentUser().email,e).then(function(e){}).catch(function(e){return alert(e)})}}else u.path("/signin")}angular.module("etaxi").controller("expenseCtrl",e),e.$inject=["$scope","authentication","userservice","fileupload","$route","$location"]}();
"use strict";!function(){function e(e,t,n,r){var a=this;if(e.isLoggedIn()){var s=function(e){var t=e.getDate(),n=e.getMonth()+1,r=e.getFullYear();return t<10&&(t="0"+t),n<10&&(n="0"+n),e=t+"-"+n+"-"+r};a.showEditArea=!1,a.showExpenseList=!0,a.loadExpenseSummary=function(){t.showExpenseSummary(e.currentUser().email).then(function(e){if(!0===e.data.success){a.expenseSummaryError=!1,a.expenseSummarySuccess=!0,a.expensesList=e.data.expense;for(var t=0,n=0;n<a.expensesList.length;n++)t+=parseFloat(a.expensesList[n].amount);a.totalAmount=t;var r=function(){for(var e=[],t=0;t<7;t++){var n=new Date;n.setDate(n.getDate()-t),e.push(s(n))}return e}().map(function(e){return a.expensesList.filter(function(t){return t.startDate===e})});a.weeklyExpense=r.filter(function(e){return e.length>0});var o=a.weeklyExpense.map(function(e){return e.map(function(e){return e.amount})}).map(function(e){return e.reduce(function(e,t){return e+t},0)});a.weeklyTotalExpenses=o.reduce(function(e,t){return e+t},0)}else e.data.error&&(a.expenseSummaryError=!0)}).catch(function(e){alert(e)})},a.editExpense=function(n){a.showEditArea=!0,a.showExpenseList=!1,t.showSinlgeExpense(e.currentUser().email,n).then(function(e){console.log(e),e.data.error?(a.editDataLoadError=!0,a.editDataLoadErrorMessage=e.data.error):!0===e.data.success&&(a.editDataLoadError=!1,a.expenseEdit={expenseDate:e.data.data[0].startDate,amount:e.data.data[0].amount})}).catch(function(e){alert(e)})},a.cancelEdit=function(){a.showEditArea=!1,a.showExpenseList=!0}}else n.path("/signin")}angular.module("etaxi").controller("allexpensesCtrl",e),e.$inject=["authentication","userservice","$location","$filter"]}();
"use strict";!function(){function e(e,n,t){if(e.isLoggedIn()){var r=this;r.loadIncome=function(){r.totalIncome=0,n.showIncome(e.currentUser().email).then(function(e){if(!0===e.data.success){r.incomeList=e.data.data;for(var n=0;n<r.incomeList.length;n++)r.totalIncome+=parseFloat(r.incomeList[n].income);var t=r.incomeList.filter(function(e){return"cash"===e.incomeType});r.totalCash=t.reduce(function(e,n){return e+n.income},0);var o=r.incomeList.filter(function(e){return"card"===e.incomeType});r.totalCard=o.reduce(function(e,n){return e+n.income},0);var c=r.incomeList.filter(function(e){return"account"===e.incomeType});r.totalAccountIncome=c.reduce(function(e,n){return e+n.income},0)}}).catch(function(e){return function(){alert(e)}})},r.loadExpense=function(){r.totalExpense=0,n.showExpenseSummary(e.currentUser().email).then(function(e){if(!0===e.data.success){r.expensesList=e.data.expense;for(var n=0;n<r.expensesList.length;n++)r.totalExpense+=parseFloat(r.expensesList[n].amount);var t=r.expensesList.filter(function(e){return"oil"===e.expense_sector});r.oilExpense=t.reduce(function(e,n){return e+n.amount},0);var o=r.expensesList.filter(function(e){return"fuel"===e.expense_sector});r.fuelTotalCost=o.reduce(function(e,n){return e+n.amount},0);var c=r.expensesList.filter(function(e){return"road_tax"===e.expense_sector});r.roadTax=c.reduce(function(e,n){return e+n.amount},0);var s=r.expensesList.filter(function(e){return"insurance"===e.expense_sector});r.insuranceCost=s.reduce(function(e,n){return e+n.amount},0);var u=r.expensesList.filter(function(e){return"repair"===e.expense_sector});r.repairCost=u.reduce(function(e,n){return e+n.amount},0);var a=r.expensesList.filter(function(e){return"car_rent"===e.expense_sector});r.carRentCost=a.reduce(function(e,n){return e+n.amount},0);var i=r.expensesList.filter(function(e){return"car_finance"===e.expense_sector});r.carFinanceCost=i.reduce(function(e,n){return e+n.amount},0);var f=r.expensesList.filter(function(e){return"car_wash"===e.expense_sector});r.carWashCost=f.reduce(function(e,n){return e+n.amount},0);var p=r.expensesList.filter(function(e){return"mot"===e.expense_sector});r.motCost=p.reduce(function(e,n){return e+n.amount},0);var l=r.expensesList.filter(function(e){return"tyres"===e.expense_sector});r.tyresCost=l.reduce(function(e,n){return e+n.amount},0);var d=r.expensesList.filter(function(e){return"phone"===e.expense_sector});r.phoneCost=d.reduce(function(e,n){return e+n.amount},0);var m=r.expensesList.filter(function(e){return"accountancy"===e.expense_sector});r.accountancyCost=m.reduce(function(e,n){return e+n.amount},0);var x=r.expensesList.filter(function(e){return"other"===e.expense_sector});r.otherCost=x.reduce(function(e,n){return e+n.amount},0)}}).catch(function(e){alert(e)})},r.loadEstimatedTax=function(){n.showEstimatedTax(e.currentUser().email).then(function(e){e.data.error?(r.taxLoadError=!0,r.taxLoadErrorMsg=e.data.error):r.loadTaxInfo=e.data}).catch(function(e){console.log(e)})},r.exportAsPDF=function(){n.generateAccountStatement(e.currentUser().email,e.currentUser().userDirId).then(function(e){e.data.error?(r.dpfGenerateError=!0,r.dpfGenerateErrorMsg=e.data.error):r.dpfGenerateError=!1}).catch(function(e){r.dpfGenerateError=!0,r.dpfGenerateErrorMsg=e})}}else t.path("/signin")}angular.module("etaxi").controller("financeCtrl",e),e.$inject=["authentication","userservice","$route"]}();
"use strict";!function(){function t(t,e,r,a){var n=this;e.isLoggedIn()?(n.userSetting=function(){t.getUserStatus(e.currentUser().email).then(function(t){t.data.error?n.initialError=!0:(n.initialError=!1,n.contactSettingOn=t.data.status.statusCollection[0].contact,n.businessSettingOn=t.data.status.statusCollection[0].business,n.vehicleSettingOn=t.data.status.statusCollection[0].vehicle,n.insuranceSettingOn=t.data.status.statusCollection[0].insurance,n.lisenceSettingOn=t.data.status.statusCollection[0].lisence,n.additional_info=t.data.status.statusCollection[0].additional_info)}).catch(function(t){return alert(t)})},n.contact={basic:{house:"",street:"",city:"",county:"",postcode:"",mobile:"",Landphone:""},business:!0,businessadd:{building:"",street:"",city:"",county:"",postcode:"",landphone:"",mobile:"",email:""}},n.addContact=function(){console.log(n.contact),t.addContactDetails(e.currentUser().email,n.contact).then(function(r){if(r.data.error)n.addContactError=!0,n.addContactErrorMessage=r.data.error;else{var s={update_at:"contact",email:e.currentUser().email,status:!0};t.updateUserStatus(s).then(function(t){!0===t.data.updated?a.reload():(n.addContactError=!0,n.addContactErrorMessage="Error! while updating status collection")}).catch(function(t){return alert(t)})}}).catch(function(t){return alert(t)})},n.showContactDetails=function(){t.showContact(e.currentUser().email).then(function(t){t.data.error?n.showContactError=!0:(n.showContactError=!1,n.userContactDetails=t.data.data)}).catch(function(t){return alert(t)})},n.businessInfo={name:"",type:""},n.addBusinessInfoSubmit=function(){t.addBusinessInfo(e.currentUser().email,n.businessInfo).then(function(r){if(r.data.error)n.business_infAddingError=!0,n.businessInfErMgm=r.data.error.name+" "+r.data.error.details[0].message;else{var s={update_at:"business",email:e.currentUser().email,status:!0};t.updateUserStatus(s).then(function(t){!0===t.data.updated?a.reload():n.business_infAddingError=!0}).catch(function(t){return alert(t)})}}).catch(function(t){return alert(t)})},n.showBusinessBasic=function(){t.showBusinessBasic(e.currentUser().email).then(function(t){t.data.error?(n.businessBasicInfoError=!0,n.businessBasicInfoErrorMsg=t.data.error):(n.businessBasicInfoError=!1,n.businessBasicInfoList=t.data.data)}).catch(function(t){return alert(t)})},n.vehicle={type:"",brand:"",registration:"",car_value:"",mot:"",roadtax:"",car_status:""},n.addVechicleDetails=function(){t.addVehicleInfo(e.currentUser().email,n.vehicle).then(function(r){if(r.data.error)n.vehicleError=!0,!0===r.data.error.isJoi?n.vehicleErrorMsg=r.data.error.details[0].message:n.vehicleErrorMsg=r.data.error;else if(!0===r.data.success){var s={update_at:"vehicle",email:e.currentUser().email,status:!0};t.updateUserStatus(s).then(function(t){!0===t.data.updated?a.reload():(n.vehicleError=!0,n.vehicleErrorMsg="Failed to update user status for vehicle. Contact admin")}).catch(function(t){return alert(t)})}}).catch(function(t){return alert(t)})},n.getVehicle=function(){t.showVehicle(e.currentUser().email).then(function(t){t.data.error?(n.showVehicleError=!0,n.showVehicleErrorMgm=t.data.error):!0===t.data.success&&(n.showVehicleError=!1,n.vehicleList=t.data.data)}).catch(function(t){return alert(t)})},n.insurance={name:"",valid_date:"",number:""},n.addInsurance=function(){t.addInsurance(e.currentUser().email,n.insurance).then(function(r){if(r.data.error)n.addInsuranceErr=!0,!0===r.data.error.isJoi?n.insuranceErrMgs=r.data.error.details[0].message:n.insuranceErrMgs=r.data.error;else if(!0===r.data.success){n.addInsuranceErr=!1;var s={update_at:"insurance",email:e.currentUser().email,status:!0};t.updateUserStatus(s).then(function(t){!0===t.data.updated?a.reload():(n.addInsuranceErr=!0,n.insuranceErrMgs="Failed to update user status for vehicle. Contact admin")}).catch(function(t){return alert(t)})}}).catch(function(t){return alert(t)})},n.showInsurance=function(){t.showInsurance(e.currentUser().email).then(function(t){t.data.error?(n.showInsuraceError=!0,!0===t.data.error.isJoi?n.showInsuraceErrorMsg=t.data.error.details[0].message:n.showInsuraceErrorMsg=t.data.error):!0===t.data.success&&(n.showInsuraceError=!1,n.insuraceList=t.data.insurance)}).catch(function(t){return alert(t)})},n.lisence={dvla:"",taxi_type:"",valid_till:""},n.addLisence=function(){t.addLisence(e.currentUser().email,n.lisence).then(function(r){if(r.data.error)n.lisenceError=!0,!0===r.data.error.isJoi?n.lisenceErrorMsg=r.data.error.details[0].message:n.lisenceErrorMsg=r.data.error;else{n.lisenceError=!1;var s={update_at:"lisence",email:e.currentUser().email,status:!0};t.updateUserStatus(s).then(function(t){!0===t.data.updated?a.reload():(n.lisenceError=!0,n.lisenceErrorMsg="Failed to update user status for vehicle. Contact admin")}).catch(function(t){return alert(t)})}}).catch(function(t){return alert(t)})},n.showLisence=function(){t.userLisence(e.currentUser().email).then(function(t){console.log(t),t.data.error?(n.lisenceLoadError=!0,!0===t.data.error.isJoi?n.lisenceLoadErrorMsg=t.data.error.details[0].message:n.lisenceLoadErrorMsg=t.data.error):(n.lisenceLoadError=!1,n.lisenceInfo=t.data.lisence)}).catch(function(t){return alert(t)})},n.niUti={ni_number:"",uti_number:""},n.addAdditionalInfo=function(){t.addAdditionalInformation(e.currentUser().email,n.niUti).then(function(r){if(r.data.error)n.additionalInfoError=!0,n.errorMessage=r.data.error;else if(r.data.updated){var s={update_at:"additional_info",email:e.currentUser().email,status:!0};t.updateUserStatus(s).then(function(t){!0===t.data.updated?a.reload():(n.additionalInfoError=!0,n.errorMessage="Something went wrong with updating user collection status. Contact admin")}).catch(function(t){return alert(t)})}}).catch(function(t){alert(t)})}):r.path("/signin")}angular.module("etaxi").controller("settingsCtrl",t),t.$inject=["userservice","authentication","$location","$route"]}();
"use strict";!function(){function e(e,n,t,a,r){var s=this;e.isLoggedIn()?(s.composeOn=!1,s.singleMessage=!1,s.inboxOn=!0,s.sentboxOn=!1,"admin"===e.currentUser().account_type?(s.loadAdminContactList=!0,s.loadAccountantContactList=!1):"accountant"===e.currentUser().account_type?(s.loadAdminContactList=!1,s.loadAccountantContactList=!0):(s.loadAdminContactList=!1,s.loadAccountantContactList=!1),s.loadContact=function(){t.loadUserContact(e.currentUser().email).then(function(e){e.data.success&&(s.contacts=e.data.contacts[0].appContact.filter(function(e){return"taxiadmin@taxiaccounting.co.uk"!==e.contactEmail}))}).catch(function(e){alert(e)})},s.turnComposeOn=function(){s.composeOn=!0,s.sentboxOn=!1,s.inboxOn=!1,s.singleMessage=!1},s.turnSentOn=function(){s.sentboxOn=!0,s.composeOn=!1,s.inboxOn=!1,s.singleMessage=!1},s.turnInboxOn=function(){s.inboxOn=!0,s.sentboxOn=!1,s.composeOn=!1,s.singleMessage=!1},s.turnComposeOff=function(){s.composeOn=!1,s.inboxOn=!0},s.createMessage={sender:e.currentUser().email,receiver:"",subject:"",message:""},s.sendMessage=function(){t.sendMessage(s.createMessage).then(function(e){e.data.error?(s.msgError=!0,s.msgErrorMessage=e.data.error):!0===e.data.success&&(s.msgError=!1,setTimeout(function(){a.reload()},1e3))}).catch(function(e){return alert(e)})},s.loadInbox=function(){t.viewAllMessage(e.currentUser().email).then(function(e){e.data.error?(s.inboxLoadError=!0,s.inboxLoadErrorMessage=e.data.error):!0===e.data.success&&(s.inboxLoadError=!1,e.data.message.length>0?s.messages=e.data.message:s.emptyInbox=!0)}).catch(function(e){return alert(e)})},s.loadSentBox=function(){t.viewAllSentMessage(e.currentUser().email).then(function(e){e.data.error?(s.sentboxLoadError=!0,s.sentBoxLoadErrorMessage=e.data.error):!0===e.data.success&&(s.sentboxLoadError=!1,e.data.message.length>0?s.sentMessages=e.data.message:s.emptySentBox=!0)}).catch(function(e){return alert(e)})},s.viewMessage=function(e){s.inboxOn=!1,s.sentboxOn=!1,s.singleMessage=!0,t.viewSingleMessage(e).then(function(e){e.data.error?(s.singleMessageError=!0,s.singleMessageErrorMessage=e.data.error):(console.log(e),s.singleMessageError=!1,s.singleMessageData=e.data.message)}).catch(function(e){return alert(e)})},s.replyMessage=function(e,n,a){s.replyOn=!0,s.replyMessage={reply:"",sender:a,receiver:n},s.sendReply=function(){t.sendReply(e,s.replyMessage).then(function(e){e.data.error?(s.replyError=!0,s.replyErrorMsg=e.data.error):e.data.success&&(s.replyError=!1)}).catch(function(e){alert(e)})}}):n.path("/signin")}angular.module("etaxi").controller("msgController",e),e.$inject=["authentication","$location","userservice","$route","$routeParams"]}();
"use strict";!function(){function t(t,n,r){var a=this;n.isLoggedIn()&&"admin"===n.currentUser().account_type?(a.initialUserManagement=function(){t.showUsers().then(function(t){t.data.error?(a.countError=!0,a.countErrorMsg=t.data.error):(a.countError=!1,a.userCount=t.data.count)}).catch(function(t){})},a.search={query:""},a.searchUser=function(){t.searchUser(a.search.query).then(function(t){t.data.error?(a.searchError=!0,a.searchErrorMsg=t.data.error):(a.searchError=!1,a.searchResults=t.data.results)}).catch(function(t){alert(t)})},a.initAccounantManagement=function(){t.checkAccountantCollection().then(function(t){t.data.error?a.accountantLoadError=!0:(a.accountantLoadError=!1,0===t.data.accountant.length?a.noAccountant=!0:(a.noAccountant=!1,a.accountantsList=t.data.accountant))}).catch(function(t){return alert(t)}),a.accountant={profile:{name:"",email:"",mobile:""},company:{company_name:"",address:"",tel:"",company_email:"",website:""}},a.addAccountant=function(){t.addAccountant(a.accountant).then(function(t){t.data.error?(a.addAccountantError=!0,a.addAccountantErrorMsg=t.data.error):a.addAccountantError=!1}).catch(function(t){return alert(t)})}}):r.path("/signin")}angular.module("etaxi").controller("ctrlController",t),t.$inject=["userservice","authentication","$location"]}();
"use strict";!function(){function r(r,t,a){var n=this;r.isLoggedIn()?a.showEstimatedTax(r.currentUser().email).then(function(r){r.data.error?(n.loadTaxReturnError=!0,n.loadTaxReturnErrorMsg=r.data.error):n.taxInfo=r.data}).catch(function(r){n.loadTaxReturnError=!0,n.loadTaxReturnErrorMsg=r}):t.path("/signin")}angular.module("etaxi").controller("taxController",r),r.$inject=["authentication","$location","userservice"]}();
"use strict";!function(){function t(t,n,a,c,o){if(t.isLoggedIn()&&"admin"===t.currentUser().account_type){var r=this;r.weHaveCustomers=!1,r.userDetails=function(){n.getSingleCustomerDetails(c.userid).then(function(t){t.data.success?(r.userLoaded=!0,r.user=t.data.user):r.userLoaded=!1}).catch(function(t){alert(t)})},r.showAccountants=function(){a.accountants().then(function(t){t.data.error?(r.loadAccountantError=!0,r.loadAccountantErrorMsg="Unable to load accountant(s)"):(r.loadAccountantError=!1,r.accountants=t.data.accountants,r.accountants.forEach(function(t){t.customers.forEach(function(t){t.customerid===r.user.email&&(r.weHaveCustomers=!0)})}))}).catch(function(t){alert(t)})},r.assignAccountant=function(t){a.assignAccountantToUser(t,c.userid).then(function(t){t.data.error?(r.accountantAssignmentError=!0,r.accountantAssignmentErrorMsg=t.data.error):(r.accountantAssignmentError=!1,r.weHaveCustomers=!0,r.accountant=t.data.accountant)}).catch(function(t){alert(t)})}}else o.path("/signin")}angular.module("etaxi").controller("usrManageCtrl",t),t.$inject=["authentication","userservice","adminoperation","$routeParams","$location"]}();
"use strict";!function(){function t(t,n,c,a,o){if(t.isLoggedIn()&&"admin"===t.currentUser().account_type){var e=this;e.loadAccountant=function(){e.AccountantId=c.accountantId,n.accountantProfile(e.AccountantId).then(function(t){e.accountantInfo=t.data.accountant,e.accountantInfo.customers.length<1?e.noCustomers=!0:e.noCustomers=!1}).catch(function(t){return alert(t)})},e.createLoginForAccountant=function(){e.accountantLoginInfo={email:e.accountantInfo.email,account_type:"accountant"},n.createAccountantLogin(e.accountantLoginInfo).then(function(t){t.data.success?(e.accountantCreationSuccess=!0,e.accountantCreationError=!1,e.accountantCreationSuccessMsg="Account successfully create. \n\t\t\t\t\t\t\tAsk accountant to check "+e.accountantLoginInfo.email,setTimeout(function(){e.UpdateAccountantLoginCreated()},500)):(e.accountantCreationError=!0,e.accountantCreationSuccess=!1,e.accountantCreationErrorMsg=t.data.error)}).catch(function(t){alert(t)})},e.UpdateAccountantLoginCreated=function(){n.updateLoginAccountantCreation(c.accountantId).then(function(t){t.data.success&&o.reload()}).catch(function(t){alert(t)})}}else a.path("/signin")}angular.module("etaxi").controller("accountantCtrl",t),t.$inject=["authentication","userservice","$routeParams","$location","$route"]}();
"use strict";!function(){function o(o,r,c,a,e,n,t){var s=this;c.isLoggedIn()?(s.noDocs=!0,s.showUploadForm=!1,s.checkDocs=function(){s.docCheckFailed=!1,a.checkDocuments(c.currentUser().userId).then(function(o){s.weHaveDocs=!0,s.noDocs=!1,s.totalDocs=o.data.doc.length,s.docs=o.data.doc,s.Files=s.docs.map(function(o){return o.docLocation})}).catch(function(o){s.weHaveDocs=!1,s.docCheckFailed=!0,s.docCheckErrorMsg=o})},s.docs={name:"",whatFor:"",whosFor:"",accountDocs:""},s.uploadDoc=function(){s.docs.name&&s.docs.whatFor&&s.docs.whosFor&&r.accountDocs?(s.uploaError=!1,s.uploadInfo={documentId:c.currentUser().userId,userId:c.currentUser().userDirId},e.uploadAccountDocs(r.accountDocs,s.uploadInfo.documentId,s.uploadInfo.userId).then(function(o){!1===o.data.success?(s.uploaError=!1,s.uploaErrorMsg=o.data.error):!0===o.data.success&&(s.docInfo={name:s.docs.name,whatFor:s.docs.whatFor,whosFor:s.docs.whosFor,docId:c.currentUser().userId,uploader:c.currentUser().userId,docLocation:o.data.docLocation},a.createDocument(s.docInfo).then(function(o){o.data.error?(s.uploaError=!1,s.uploaErrorMsg=o.data.error):o.data.success&&n.reload()}).catch(function(o){o&&(s.uploaError=!0,s.uploaErrorMsg=o)}))}).catch(function(o){o&&(s.uploaError=!0,s.uploaErrorMsg=o)})):(s.uploaError=!0,s.uploaErrorMsg="All * fields are required. Must not be empty")},s.downloadFile=function(r){o.location.href=r}):t.path("/signin")}angular.module("etaxi").controller("docsCtrl",o),o.$inject=["$window","$scope","authentication","userservice","fileupload","$route","$location"]}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
