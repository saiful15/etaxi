"use strict";!function(){angular.module("etaxi",["ngResource","ngRoute","720kb.datepicker","chart.js"]).config(["$routeProvider","$locationProvider",function(e,l){e.when("/",{templateUrl:"home/home.view.html",controller:"homeCtrl",controllerAs:"hmvm"}).when("/services",{templateUrl:"services/services.view.html",controller:"servicesCtrl",controllerAs:"srvm"}).when("/price",{templateUrl:"price/price.view.html",controller:"priceCtrl",controllerAs:"prvm"}).when("/aboutus",{templateUrl:"aboutus/aboutus.view.html"}).when("/contactus",{templateUrl:"contactus/contactus.view.html",controller:"contactusCtrl",controllerAs:"ctvm"}).when("/signup",{templateUrl:"signup/signup.view.html",controller:"signCtrl",controllerAs:"sgnvm"}).when("/signin",{templateUrl:"signin/signin.view.html",controller:"signinCtrl",controllerAs:"lgvm"}).when("/dashboard",{templateUrl:"dashboard/dashboard.view.html",controller:"dashboardCtrl",controllerAs:"dsvm"}).when("/businessprofile",{templateUrl:"dashboard/businessprofile/businessprofile.view.html",controller:"businessProfileCtrl",controllerAs:"bsvm"}).when("/serviceplan",{templateUrl:"dashboard/serviceplan/serviceplan.view.html",controller:"servicePlanCtrl",controllerAs:"srvm"}).when("/income",{templateUrl:"dashboard/income/income.view.html",controller:"incomeCtrl",controllerAs:"invm"}).when("/allincomestatements",{templateUrl:"dashboard/allincomestatements/allincomestatements.view.html",controller:"allincomeStatmentController",controllerAs:"inStmt"}).when("/expense",{templateUrl:"dashboard/expense/expense.view.html",controller:"expenseCtrl",controllerAs:"exvm"}).when("/financialstatement",{templateUrl:"dashboard/financialstatement/financialstatement.view.html",controller:"financeCtrl",controllerAs:"fstvm"}).when("/settings",{templateUrl:"dashboard/settings/settings.view.html",controller:"settingsCtrl",controllerAs:"stvm"}).when("/profile",{templateUrl:"profile/profile.view.html",controller:"profileCtrl",controllerAs:"prvm"}).when("/forgotpassword",{templateUrl:"forgotpassword/forgotpassword.view.html",controller:"forgotPasswordController",controllerAs:"frp"}).when("/messages",{templateUrl:"messages/messages.view.html",controller:"msgController",controllerAs:"msgvm"}).when("/appcontrol",{templateUrl:"appcontrol/appcontrol.view.html",controller:"ctrlController",controllerAs:"cvm"}).when("/appcontrol/users/:userid",{templateUrl:"appcontrol/users/user.view.html",controller:"usrManageCtrl",controllerAs:"uvm"}).when("/appcontrol/accountant/:accountantId",{templateUrl:"appcontrol/accountant/accountant.view.html",controller:"accountantCtrl",controllerAs:"acvm"}),l.html5Mode({enabled:!0})}])}();
"use strict";!function(){function t(t,e){var n=function(e){t.localStorage.etaxitkn=e},r=function(){return t.localStorage.etaxitkn},o=function(){var e,n=r();return!!n&&(e=n.split(".")[1],e=t.atob(e),e=JSON.parse(e))};return{currentUser:function(){if(o()){var e=r().split(".")[1];return e=t.atob(e),e=JSON.parse(e),{userId:e._id,email:e.email,name:e.name,userDirId:e.userId,account_type:e.account_type}}return!1},saveToken:n,getToken:r,isLoggedIn:o,register:function(t){return e.post("/api/register",t).success(function(t){n(t.token)})},login:function(t){return e.post("/api/login",t).success(function(t){n(t.token)})},logout:function(){t.localStorage.removeItem("etaxitkn")}}}angular.module("etaxi").service("authentication",t),t.$inject=["$window","$http"]}();
"use strict";!function(){function t(t){function n(t){return t}function e(t){return t}return{showUsers:function(){return t.get("/api/users").then(n).catch(e)},searchUser:function(c){return t.get("/api/"+c+"/search").then(n).catch(e)},showUser:function(c){return t.get("/api/"+c+"/user").then(n).catch(e)},checkAccountantCollection:function(){return t.get("/api/checkaccountantcollection").then(n).catch(e)},updateLoginAccountantCreation:function(c){return t.put("/api/"+c+"/updatelogincreation").then(n).then(e)},addAccountant:function(c){return t.post("/api/addaccountant",c).then(n).catch(e)},createAccountantLogin:function(c){return t.post("/api/createaccountantlogin",c).then(n).catch(e)},getUserStatus:function(c){return t.get("/api/userstatus/"+c).then(n).catch(e)},saveProfile:function(c,a){return t.post("/api/saveprofile/"+c,a).then(n).catch(e)},updateUserStatus:function(c){return t.post("/api/userstatus/",c).then(n).catch(e)},getProfile:function(c){return t.get("/api/userprofile/"+c).then(n).catch(e)},updateAddress:function(c,a){return t.post("/api/updateaddress/"+c,a).then(n).catch(e)},addExpense:function(c,a){return t.post("/api/addexpense/"+c,a).then(n).catch(e)},showExpenseSummary:function(c){return t.get("/api/showexpense/"+c).then(n).catch(e)},addIncome:function(c,a){return t.post("/api/"+c+"/addincome",a).then(n).catch(e)},showIncome:function(c){return t.get("/api/"+c+"/showincome").then(n).catch(e)},deleteIncome:function(c,a){return t.delete("/api/"+c+"/"+a+"/deleteincome").then(n).catch(e)},showSingleIncome:function(c,a){return t.get("/api/"+c+"/getincome/"+a).then(n).catch(e)},updateIncomeStatement:function(c,a,i){return t.patch("/api/"+c+"/updateincome/"+a,i).then(n).catch(e)},addAdditionalInformation:function(c,a){return t.post("/api/addaditionalinfo/"+c,a).then(n).catch(e)},addContactDetails:function(c,a){return t.post("/api/"+c+"/addcontact/",a).then(n).catch(e)},showContact:function(c){return t.get("/api/showcontact/"+c).then(n).catch(e)},addBusinessInfo:function(c,a){return t.post("/api/"+c+"/addbusinessinfo/",a).then(n).catch(e)},showBusinessBasic:function(c){return t.get("/api/"+c+"/showbusinessinfo").then(n).catch(e)},addVehicleInfo:function(c,a){return t.post("/api/"+c+"/addvehicle",a).then(n).catch(e)},showVehicle:function(c){return t.get("/api/"+c+"/showvehicle").then(n).catch(e)},addInsurance:function(c,a){return t.post("/api/"+c+"/insurance",a).then(n).catch(e)},showInsurance:function(c){return t.get("/api/"+c+"/insurance").then(n).catch(e)},addLisence:function(c,a){return t.post("/api/"+c+"/lisence",a).then(n).catch(e)},userLisence:function(c){return t.get("/api/"+c+"/lisence").then(n).catch(e)},exportToCSV:function(c,a){return t.get("/api/"+c+"/"+a).then(n).catch(e)},loadUserContact:function(c){return t.get("/api/"+c+"/contacts").then(n).catch(e)},adminContact:function(){return t.get("/api/allcontacts").then(n).catch(e)},sendMessage:function(c){return t.post("/api/message",c).then(n).catch(e)},viewAllMessage:function(c){return t.get("/api/"+c+"/messages").then(n).catch(e)},viewSingleMessage:function(c){return t.get("/api/"+c).then(n).catch(e)},sendReply:function(c,a){return t.post("/api/"+c+"/replymessage",a).then(n).catch(e)},viewAllSentMessage:function(c){return t.get("/api/"+c+"/sentmessages").then(n).catch(e)},showExpenseFile:function(c,a){return t.get("/api/expense/"+c+"/"+a).then(n).catch(e)},accountantProfile:function(c){return t.get("/api/accountant/"+c).then(n).catch(e)},getSingleCustomerDetails:function(c){return t.get("/api/"+c+"/showuser").then(n).catch(e)}}}angular.module("etaxi").service("userservice",t),t.$inject=["$http"]}();
"use strict";!function(){function n(n){function t(n){return n}function c(n){return n}return{accountants:function(){return n.get("/api/accountants").then(t).catch(c)},assignAccountantToUser:function(a,u){return n.post("/api/"+u+"/"+a+"/assignaccountant").then(t).catch(c)}}}angular.module("etaxi").service("adminoperation",n),n.$inject=["$http"]}();
"use strict";!function(){function t(t){function n(t){return t}function e(t){return t}return{getCustomers:function(u){return t.get("api/"+u+"/customers").then(n).catch(e)}}}angular.module("etaxi").service("AccountantService",t),t.$inject=["$http"]}();
"use strict";!function(){function t(t){function n(t){return t}function e(t){return t}return{uploadProductFile:function(u,r,a){var i=new FormData;return i.append("accountImg",u),t.post("/api/fileupload/"+r+"/"+a,i,{transformRequest:angular.identity,headers:{"Content-Type":void 0}}).then(n).catch(e)}}}angular.module("etaxi").service("fileupload",t),t.$inject=["$http"]}();
"use strict";!function(){function t(t){function n(t){return t}function e(t){return t}return{contactMessage:function(c){return t.post("/api/contact",c).then(n).catch(e)}}}angular.module("etaxi").service("systemService",t),t.$inject=["$http"]}();
"use strict";!function(){function t(t){function n(t){return t}function e(t){return t}return{passwordResetLink:function(r,u){return t.post("/api/"+r+"/"+u+"/passwordresetlink").then(n).catch(e)},validateResetKey:function(r,u,c){return t.get("/api/"+c+"/"+r+"/"+u).then(n).catch(e)},updatePassword:function(r,u,c){return t.put("/api/"+r+"/"+u+"/"+c).then(n).catch(e)}}}angular.module("etaxi").service("account",t),t.$inject=["$http"]}();
"use strict";!function(){angular.module("etaxi").directive("siteNav",function(){return{restrict:"EA",templateUrl:"common/directives/navigation/navigation.template.html",controller:"navCtrl as nvm"}})}();
"use strict";!function(){function t(t,n,e){this.loggedIn=n.isLoggedIn(),this.logout=function(){n.logout(),t.path("/signin")},n.isLoggedIn()&&(this.forLoggedInUser=!0,this.accountType=n.currentUser().account_type,this.name=n.currentUser().name)}angular.module("etaxi").controller("navCtrl",t),t.$inject=["$location","authentication","userservice"]}();
"use strict";!function(){angular.module("etaxi").directive("siteFooter",function(){return{restrict:"EA",templateUrl:"common/directives/site-footer/sitefooter.template.html"}})}();
"use strict";!function(){function i(i){return{restrict:"A",link:function(n,e,t){var c=i(t.fileModel).assign;e.bind("change",function(){n.$apply(function(){c(n,e[0].files[0])})})}}}angular.module("etaxi").directive("fileModel",i),i.$inject=["$parse"]}();
"use strict";!function(){angular.module("etaxi").directive("adminContacts",function(){return{restrict:"EA",templateUrl:"common/directives/admincontacts/admincontacts.template.html",controller:"adminContactsCtrl as adcon"}})}();
"use strict";!function(){function t(t){var n=this;n.loadAdminContacts=function(){t.adminContact().then(function(t){console.log("response",t),n.customers=t.data.contacts.filter(function(t){return"customer"===t.account_type}),n.accountants=t.data.contacts.filter(function(t){return"accountant"===t.account_type})}).catch(function(t){alert(t)})}}angular.module("etaxi").controller("adminContactsCtrl",t),t.$inject=["userservice"]}();
"use strict";!function(){angular.module("etaxi").controller("homeCtrl",function(){})}();
"use strict";!function(){angular.module("etaxi").controller("servicesCtrl",function(){})}();
"use strict";!function(){angular.module("etaxi").controller("priceCtrl",function(){})}();
"use strict";!function(){function e(e){var r=this;r.message={name:"",email:"",body:""},r.sendMessage=function(){e.contactMessage(r.message).then(function(e){e.data.error?(r.messageError=!0,r.messageErrorMsg=e.data.error):(r.messageError=!1,r.messageErrorMsg="We have received your request. We will be in touch soon")}).catch(function(e){return alert(e)})}}angular.module("etaxi").controller("contactusCtrl",e),e.$inject=["systemService"]}();
"use strict";!function(){function r(r,e){var o=this;o.newuser={name:"",email:"",password:""},o.error=!1,o.createAccount=function(){o.newuser.email&&o.newuser.password?(o.error=!1,o.doRegister()):(o.error=!0,o.errorMessage="All fields are required. Must not be empty")},o.doRegister=function(){e.register(o.newuser).error(function(r){o.error=!0,o.errorMessage=r.error}).then(function(e){r.path("/dashboard")})},e.isLoggedIn()&&r.path("/dashboard")}angular.module("etaxi").controller("signCtrl",r),r.$inject=["$location","authentication"]}();
"use strict";!function(){function r(r,e){var o=this;o.user={email:"",password:""},o.error=!1,o.letLogin=function(){o.user.email&&o.user.password?(o.error=!1,o.doLogin()):(o.error=!0,o.errorMessage="All fields required. Must not be empty")},o.doLogin=function(){r.login(o.user).error(function(r){o.error=!0,o.errorMessage=r.error}).then(function(){e.path("/dashboard")})},r.isLoggedIn()&&e.path("/dashboard")}angular.module("etaxi").controller("signinCtrl",r),r.$inject=["authentication","$location"]}();
"use strict";!function(){function r(r,s,e,a){var t=this;e.v&&e.hack&&e.for?(t.passResetForm=!0,t.passResetRequest=!1):(t.passResetRequest=!0,t.passResetForm=!1),t.user={email:""},t.checkUser=function(){if(!t.user.email)return t.resetPassError=!0,void(t.resetPassErrorMsg="Please enter email address first");t.loading=!0,t.btnDisabled=!0,r.showUser(t.user.email).then(function(r){r.data.error?(t.resetPassError=!0,!0===r.data.error.isJoi?t.resetPassErrorMsg=r.data.error.details[0].message:t.resetPassErrorMsg=r.data.error):(t.resetPassError=!1,setTimeout(function(){s.passwordResetLink(t.user.email,r.data.user._id).then(function(r){r.data.error?(t.resetPassError=!0,t.resetPassErrorMsg=r.data.error):(t.loading=!1,t.btnDisabled=!1,t.resetPassError=!1,t.resetSuccessLink=!0,t.resetPassSuccessMsg="We have sent you a password reset link. Please check your email")}).catch(function(r){return alert(r)})},3e3))}).catch(function(r){return alert(r)})},t.validateKey=function(){s.validateResetKey(e.v,e.hack,e.for).then(function(r){!0===r.data.success?t.passwordChangeOn=!0:t.passwordChangeOn=!1}).catch(function(r){return alert(r)})},t.newpasswordinfo={newpassword:"",repeatpassword:""},t.updatePassword=function(){t.newpasswordinfo.newpassword!==t.newpasswordinfo.repeatpassword?(t.updatePassError=!0,t.updatePassErrorMsg="Error! New password and Repeat Password doesn't match."):s.updatePassword(e.for,t.newpasswordinfo.newpassword,t.newpasswordinfo.repeatpassword).then(function(r){r.data.error?(t.updatePassError=!0,t.updatePassErrorMsg=r.data.error):!0===r.data.success&&(t.updatePassError=!1,a.path("/signin"))}).catch(function(r){return alert(r)})}}angular.module("etaxi").controller("forgotPasswordController",r),r.$inject=["userservice","account","$routeParams","$location"]}();
"use strict";!function(){function t(t,e,r,o){var a=this;t.isLoggedIn()?(a.getUserStatusCollection=function(){r.getUserStatus(t.currentUser().email).then(function(e){e.data.error?a.profileLoadError=!0:e.data.status&&(a.profileLoadError=!1,a.profileOn=e.data.status.statusCollection[0].profile,a.additionInfo=e.data.status.statusCollection[0].additional_info,r.getProfile(t.currentUser().email).then(function(t){t.data.error?(a.personalProfile=!0,a.addressEditForm=!1):t.data.success&&(a.addressEditForm=!1,a.personalProfile=!1,a.showPersonalProfile=!0,a.personProfileDetails=t.data.profile,a.showAddress=!0)}).catch(function(t){alert(t)}))}).catch(function(t){alert(t)})},a.editAddress=function(){a.showAddress=!1,a.addressEditForm=!0},a.personDetails={house_number:"",street_name:"",post_code:"",city:"",county:""},a.saveAddressChange=function(t){a.personDetails.house_number&&a.personDetails.street_name&&a.personDetails.post_code&&a.personDetails.city&&a.personDetails.county?(a.editAddressError=!1,r.updateAddress(t,a.personDetails).then(function(t){t.data.error?(a.editAddressError=!0,a.erroMessage=t.data.error):t.data.success&&(a.editAddressError=!1,o.reload())}).catch(function(t){alert(t)})):(a.editAddressError=!0,a.erroMessage="Error! All fields are required")},a.cancelAddressForm=function(){a.showAddress=!0,a.addressEditForm=!1},a.niUti={ni_number:"",uti_number:""},a.addAdditionalInfo=function(e){a.niUti.ni_number&&a.niUti.uti_number?(a.additionalInfoError=!1,r.addAdditionalInformation(e,a.niUti).then(function(e){e.data.error?(a.additionalInfoError=!0,a.errorMessage=e.data.error):e.data.additionalInfo&&(a.updatedStatus={update_at:"additional_info",email:t.currentUser().email,status:!0},r.updateUserStatus(a.updatedStatus).then(function(t){!0===t.data.updated?a.showAdditionalInfo=!0:(a.showAdditionalInfo=!1,a.additionalInfoError=!0,a.errorMessage="Something went wrong with updating user collection status. Contact admin")}).catch(function(t){alert("Error while updating user status collection\t:"+t)}))}).catch(function(t){alert(t)})):(a.additionalInfoError=!0,a.errorMessage="All fields are required. Must not be empty")}):e.path("/signin")}angular.module("etaxi").controller("profileCtrl",t),t.$inject=["authentication","$location","userservice","$route"]}();
"use strict";!function(){function r(r,e,t,a){var o=this;r.isLoggedIn()?"customer"===r.currentUser().account_type?(o.customerOpr=!0,o.adminOpr=!1,o.accountantOpr=!1,o.getUserStatus=function(){t.getUserStatus(r.currentUser().email).then(function(r){r.data.error?(o.statusError=!0,o.statusErrorMessage=r.data.error):r.data.status&&(o.statusCollection=r.data.status.statusCollection)}).catch(function(r){alert(r)})},o.getUserStatus(),o.userProfile={first_name:"",last_name:"",house_no:"",street_name:"",city_name:"",county:"",postcode:""},o.createProfile=function(){o.showAjaxLoader=!0,o.btnDisabled=!0,o.userProfile.first_name&&o.userProfile.last_name&&o.userProfile.house_no&&o.userProfile.street_name&&o.userProfile.city_name&&o.userProfile.county&&o.userProfile.postcode?(o.profileError=!1,setTimeout(function(){o.showAjaxLoader=!1,o.btnDisabled=!1,t.saveProfile(r.currentUser().email,o.userProfile).then(function(e){if(e.data.error)o.profileError=!0,o.profileErrorMessage=e.data.error;else if(e.data.profile){o.profileError=!1,o.profileSuccess=!0,o.successMessage="Your profile successfully created";var t={update_at:"profile",email:r.currentUser().email,status:!0};!1===o.updateStatus(t)?(o.profileError=!0,o.profileErrorMessage="Something went wrong, updating your profile. Please contact admin"):o.getUserStatus()}}).catch(function(r){alert(r)})},500)):(o.profileError=!0,o.profileErrorMessage="All fields are required. Must not be empty",o.showAjaxLoader=!1,o.btnDisabled=!1)},o.updateStatus=function(r){var e=void 0;return t.updateUserStatus(r).then(function(r){e=!0===r.data.updated}).catch(function(r){alert(r)}),e}):"admin"===r.currentUser().account_type?(o.adminOpr=!0,o.accountantOpr=!1):"accountant"===r.currentUser().account_type&&(o.accountantOpr=!0,o.loadCustomers=function(){a.getCustomers(r.currentUser().email).then(function(r){r.data.error?(o.loadCustomerError=!0,o.loadCustomerErrorMsg=r.data.error):(o.loadCustomerError=!1,o.assignedCustomers=r.data.customers.customers)}).catch(function(r){return alert(r)})}):e.path("/signin")}angular.module("etaxi").controller("dashboardCtrl",r),r.$inject=["authentication","$location","userservice","AccountantService"]}();
"use strict";!function(){angular.module("etaxi").controller("businessProfileCtrl",function(){})}();
"use strict";!function(){function n(n,i){var t=this;n.isLoggedIn()?t.loadServicePlan=function(n){t.service_plan=!0,t.plan=n}:i.path("/signin")}angular.module("etaxi").controller("servicePlanCtrl",n),n.$inject=["authentication","$location"]}();
"use strict";!function(){function e(e,n,o){function r(e){var n=e.getDate(),o=e.getMonth()+1,r=e.getFullYear();return n<10&&(n="0"+n),o<10&&(o="0"+o),e=n+"-"+o+"-"+r}var t=this;t.Income={amount:"",incomeDate:"",income_source:""},t.addIncome=function(){t.Income.amount&&t.Income.income_source?(t.incomeError=!1,n.addIncome(e.currentUser().email,t.Income).then(function(e){!0===e.data.success&&(t.incomeError=!1,t.incomeSuccess=!0,t.successMgs="£ "+t.Income.amount+" Successfully added",t.showIncome())}).catch(function(e){alert(e)})):(t.incomeError=!0,t.incomeErrorMsg="All * fields are required")},t.showIncome=function(){t.initialError=!0,t.totalIncome=0;n.showIncome(e.currentUser().email).then(function(e){if(!0===e.data.success){t.initialError=!1,t.showTotalIncome=!0,t.incomeList=e.data.data;for(var n=0;n<t.incomeList.length;n++)t.totalIncome+=parseFloat(t.incomeList[n].income);var c=function(){for(var e=[],n=0;n<7;n++){var o=new Date;o.setDate(o.getDate()-n),e.push(r(o))}return e}(),a=c.map(function(e){return t.incomeList.filter(function(n){return n.incomeDate===e})});t.weeklyIncome=a.filter(function(e){return e.length>0});var i=t.weeklyIncome.map(function(e){return e.map(function(e){return e.income})}),u=i.map(function(e){return e[0]}),m=i.map(function(e){return e.reduce(function(e,n){return e+n},0)});t.sevendaysIncome=m.reduce(function(e,n){return e+n},0),o.colors=[{backgroundColor:"rgba(159,204,0, 0.2)",pointBackgroundColor:"rgba(159,204,0, 1)",pointHoverBackgroundColor:"rgba(159,204,0, 0.8)",borderColor:"rgba(159,204,0, 1)",pointBorderColor:"#fff",pointHoverBorderColor:"rgba(159,204,0, 1)"},"rgba(250,109,33,0.5)","#9a9a9a","rgb(233,177,69)"],o.labels=c,o.data=u}}).catch(function(e){return function(){alert(e)}})}}angular.module("etaxi").controller("incomeCtrl",e),e.$inject=["authentication","userservice","$scope"]}();
"use strict";!function(){function e(e,t,a,o){var n=this;e.isLoggedIn()?(n.showIncomeList=!0,n.showEditArea=!1,n.loadAllIncomeStatements=function(){t.showIncome(e.currentUser().email).then(function(e){if(!0===e.data.success){n.weHaveIncomes=!0,e.data.data.length<1&&(n.weHaveNoIncome=!0),n.incomesList=e.data.data;for(var t=0,a=0;a<n.incomesList.length;a++)t+=parseFloat(n.incomesList[a].income);n.totalIncomes=t}else e.data.error&&(n.weHaveIncomes=!1)}).catch(function(e){alert(e)})},n.editIncome=function(a){n.showEditArea=!0,n.showIncomeList=!1,t.showSingleIncome(e.currentUser().email,a).then(function(e){e.data.error?(n.editDataLoadError=!0,n.editDataLoadErrorMessage=e.data.error):!0===e.data.success&&(n.editDataLoadError=!1,n.incomeEdit={incomeDate:e.data.data[0].incomeDate,amount:e.data.data[0].income,income_source:e.data.data[0].incomeType})}).catch(function(e){alert(e)}),n.saveEditIncome=function(){n.incomeEdit.incomeDate&&n.incomeEdit.amount&&n.incomeEdit.income_source?(n.editFormValidationError=!1,t.updateIncomeStatement(e.currentUser().email,a,n.incomeEdit).then(function(e){!0===e.data.success?(n.showEditArea=!1,n.showIncomeList=!0):e.data.error&&(n.editFormValidationError=!0,n.editFormValidationErrorMessage=e.data.data.error)}).catch(function(e){alert(e)})):(n.editFormValidationError=!0,n.editFormValidationErrorMessage="All fields are requied. Must not be empty")}},n.cancelEdit=function(){n.showEditArea=!1,n.showIncomeList=!0},n.deleteStatement=function(a){t.deleteIncome(e.currentUser().email,a).then(function(e){!0===e.data.success?(n.loadAllIncomeStatements(),n.deletingError=!1):e.data.error&&(n.deletingError=!0)}).catch(function(e){alert(e)})}):a.path("/signin")}angular.module("etaxi").controller("allincomeStatmentController",e),e.$inject=["authentication","userservice","$location","$filter"]}();
"use strict";!function(){function e(e,n,r,t,s,u){var o=this;if(n.isLoggedIn()){var a=function(e){var n=e.getDate(),r=e.getMonth()+1,t=e.getFullYear();return n<10&&(n="0"+n),r<10&&(r="0"+r),e=n+"-"+r+"-"+t};o.expense={startDate:"",expense_sector:"",amount:"",documentId:"",documentDir:"",accountImg:""},o.addExpense=function(){o.expense&&o.expense.expense_sector&&o.expense.amount?(o.expenseError=!1,o.expense.accountImg=e.accountImg,o.expense.accountImg?(o.uploadInfo={documentId:n.currentUser().userId,userId:n.currentUser().userDirId},t.uploadProductFile(o.expense.accountImg,o.uploadInfo.documentId,o.uploadInfo.userId).then(function(e){!0===e.data.success?(o.expense.documentId=o.uploadInfo.documentId,o.expense.documentDir=e.data.fileLocation,o.pushExpense(),s.reload()):(o.expenseError=!0,o.errorMessage=e.data.error)}).catch(function(e){return alert(e)})):o.pushExpense()):(o.expenseError=!0,o.expenseSuccess=!1,o.errorMessage="All fields required. Must not be empty")},o.pushExpense=function(){r.addExpense(n.currentUser().email,o.expense).then(function(e){e.data.error?(o.expenseError=!0,o.errorMessage="Error while adding expenses for the user"):(o.expenseError=!1,o.expenseSuccess=!0,o.expenseSuccessMessage="£ "+o.expense.amount+" successfully added for "+o.expense.expense_sector,o.loadExpenseSummary())}).catch(function(e){alert(e)})},o.loadExpenseSummary=function(){r.showExpenseSummary(n.currentUser().email).then(function(e){if(!0===e.data.success){o.expenseSummaryError=!1,o.expenseSummarySuccess=!0,o.expensesList=e.data.expense;for(var n=0,r=0;r<o.expensesList.length;r++)n+=parseFloat(o.expensesList[r].amount);o.totalAmount=n;var t=function(){for(var e=[],n=0;n<7;n++){var r=new Date;r.setDate(r.getDate()-n),e.push(a(r))}return e}().map(function(e){return o.expensesList.filter(function(n){return n.startDate===e})});o.weeklyExpense=t.filter(function(e){return e.length>0});var s=o.weeklyExpense.map(function(e){return e.map(function(e){return e.amount})}).map(function(e){return e.reduce(function(e,n){return e+n},0)});o.weeklyTotalExpenses=s.reduce(function(e,n){return e+n},0)}else e.data.error&&(o.expenseSummaryError=!0)}).catch(function(e){alert(e)})},o.getExpenseFile=function(e){r.showExpenseFile(n.currentUser().email,e).then(function(e){}).catch(function(e){return alert(e)})}}else u.path("/signin")}angular.module("etaxi").controller("expenseCtrl",e),e.$inject=["$scope","authentication","userservice","fileupload","$route","$location"]}();
"use strict";!function(){function e(e,n){var t=this;t.loadIncome=function(){t.totalIncome=0,n.showIncome(e.currentUser().email).then(function(e){if(!0===e.data.success){t.incomeList=e.data.data;for(var n=0;n<t.incomeList.length;n++)t.totalIncome+=parseFloat(t.incomeList[n].income);var r=t.incomeList.filter(function(e){return"cash"===e.incomeType});t.totalCash=r.reduce(function(e,n){return e+n.income},0);var o=t.incomeList.filter(function(e){return"card"===e.incomeType});t.totalCard=o.reduce(function(e,n){return e+n.income},0);var c=t.incomeList.filter(function(e){return"account"===e.incomeType});t.totalAccountIncome=c.reduce(function(e,n){return e+n.income},0)}}).catch(function(e){return function(){alert(e)}})},t.loadExpense=function(){t.totalExpense=0,n.showExpenseSummary(e.currentUser().email).then(function(e){if(!0===e.data.success){t.expensesList=e.data.expense;for(var n=0;n<t.expensesList.length;n++)t.totalExpense+=parseFloat(t.expensesList[n].amount);var r=t.expensesList.filter(function(e){return"oil"===e.expense_sector});t.oilExpense=r.reduce(function(e,n){return e+n.amount},0);var o=t.expensesList.filter(function(e){return"fuel"===e.expense_sector});t.fuelTotalCost=o.reduce(function(e,n){return e+n.amount},0);var c=t.expensesList.filter(function(e){return"road_tax"===e.expense_sector});t.roadTax=c.reduce(function(e,n){return e+n.amount},0);var s=t.expensesList.filter(function(e){return"insurance"===e.expense_sector});t.insuranceCost=s.reduce(function(e,n){return e+n.amount},0);var u=t.expensesList.filter(function(e){return"repair"===e.expense_sector});t.repairCost=u.reduce(function(e,n){return e+n.amount},0);var i=t.expensesList.filter(function(e){return"car_rent"===e.expense_sector});t.carRentCost=i.reduce(function(e,n){return e+n.amount},0);var a=t.expensesList.filter(function(e){return"car_finance"===e.expense_sector});t.carFinanceCost=a.reduce(function(e,n){return e+n.amount},0);var f=t.expensesList.filter(function(e){return"car_wash"===e.expense_sector});t.carWashCost=f.reduce(function(e,n){return e+n.amount},0);var l=t.expensesList.filter(function(e){return"mot"===e.expense_sector});t.motCost=l.reduce(function(e,n){return e+n.amount},0);var p=t.expensesList.filter(function(e){return"tyres"===e.expense_sector});t.tyresCost=p.reduce(function(e,n){return e+n.amount},0);var m=t.expensesList.filter(function(e){return"phone"===e.expense_sector});t.phoneCost=m.reduce(function(e,n){return e+n.amount},0);var x=t.expensesList.filter(function(e){return"accountancy"===e.expense_sector});t.accountancyCost=x.reduce(function(e,n){return e+n.amount},0);var d=t.expensesList.filter(function(e){return"other"===e.expense_sector});t.otherCost=d.reduce(function(e,n){return e+n.amount},0)}}).catch(function(e){alert(e)})},t.exportAsPDF=function(){html2canvas(document.getElementById("incomeStatement"),{onrendered:function(e){var n={content:[{image:e.toDataURL(),width:500}]};pdfMake.createPdf(n).download("financial-statement.pdf")}})}}angular.module("etaxi").controller("financeCtrl",e),e.$inject=["authentication","userservice"]}();
"use strict";!function(){function e(e,r,t,a){var n=this;r.isLoggedIn()?(n.userSetting=function(){e.getUserStatus(r.currentUser().email).then(function(e){e.data.error?n.initialError=!0:(n.initialError=!1,n.contactSettingOn=e.data.status.statusCollection[0].contact,n.businessSettingOn=e.data.status.statusCollection[0].business,n.vehicleSettingOn=e.data.status.statusCollection[0].vehicle,n.insuranceSettingOn=e.data.status.statusCollection[0].insurance,n.lisenceSettingOn=e.data.status.statusCollection[0].lisence)}).catch(function(e){return alert(e)})},n.contact={basic:{house:"",street:"",city:"",county:"",postcode:"",mobile:"",Landphone:""},business:!0,businessadd:{building:"",street:"",city:"",county:"",postcode:"",landphone:"",mobile:"",email:""}},n.addContact=function(){console.log(n.contact),e.addContactDetails(r.currentUser().email,n.contact).then(function(t){if(t.data.error)n.addContactError=!0,n.addContactErrorMessage=t.data.error;else{var s={update_at:"contact",email:r.currentUser().email,status:!0};e.updateUserStatus(s).then(function(e){!0===e.data.updated?a.reload():(n.addContactError=!0,n.addContactErrorMessage="Error! while updating status collection")}).catch(function(e){return alert(e)})}}).catch(function(e){return alert(e)})},n.showContactDetails=function(){e.showContact(r.currentUser().email).then(function(e){e.data.error?n.showContactError=!0:(n.showContactError=!1,n.userContactDetails=e.data.data)}).catch(function(e){return alert(e)})},n.businessInfo={name:"",type:""},n.addBusinessInfoSubmit=function(){e.addBusinessInfo(r.currentUser().email,n.businessInfo).then(function(t){if(t.data.error)n.business_infAddingError=!0,n.businessInfErMgm=t.data.error.name+" "+t.data.error.details[0].message;else{var s={update_at:"business",email:r.currentUser().email,status:!0};e.updateUserStatus(s).then(function(e){!0===e.data.updated?a.reload():n.business_infAddingError=!0}).catch(function(e){return alert(e)})}}).catch(function(e){return alert(e)})},n.showBusinessBasic=function(){e.showBusinessBasic(r.currentUser().email).then(function(e){e.data.error?(n.businessBasicInfoError=!0,n.businessBasicInfoErrorMsg=e.data.error):(n.businessBasicInfoError=!1,n.businessBasicInfoList=e.data.data)}).catch(function(e){return alert(e)})},n.vehicle={type:"",brand:"",registration:"",car_value:"",mot:"",roadtax:"",car_status:""},n.addVechicleDetails=function(){e.addVehicleInfo(r.currentUser().email,n.vehicle).then(function(t){if(t.data.error)n.vehicleError=!0,!0===t.data.error.isJoi?n.vehicleErrorMsg=t.data.error.details[0].message:n.vehicleErrorMsg=t.data.error;else if(!0===t.data.success){var s={update_at:"vehicle",email:r.currentUser().email,status:!0};e.updateUserStatus(s).then(function(e){!0===e.data.updated?a.reload():(n.vehicleError=!0,n.vehicleErrorMsg="Failed to update user status for vehicle. Contact admin")}).catch(function(e){return alert(e)})}}).catch(function(e){return alert(e)})},n.getVehicle=function(){e.showVehicle(r.currentUser().email).then(function(e){e.data.error?(n.showVehicleError=!0,n.showVehicleErrorMgm=e.data.error):!0===e.data.success&&(n.showVehicleError=!1,n.vehicleList=e.data.data)}).catch(function(e){return alert(e)})},n.insurance={name:"",valid_date:"",number:""},n.addInsurance=function(){e.addInsurance(r.currentUser().email,n.insurance).then(function(t){if(t.data.error)n.addInsuranceErr=!0,!0===t.data.error.isJoi?n.insuranceErrMgs=t.data.error.details[0].message:n.insuranceErrMgs=t.data.error;else if(!0===t.data.success){n.addInsuranceErr=!1;var s={update_at:"insurance",email:r.currentUser().email,status:!0};e.updateUserStatus(s).then(function(e){!0===e.data.updated?a.reload():(n.addInsuranceErr=!0,n.insuranceErrMgs="Failed to update user status for vehicle. Contact admin")}).catch(function(e){return alert(e)})}}).catch(function(e){return alert(e)})},n.showInsurance=function(){e.showInsurance(r.currentUser().email).then(function(e){e.data.error?(n.showInsuraceError=!0,!0===e.data.error.isJoi?n.showInsuraceErrorMsg=e.data.error.details[0].message:n.showInsuraceErrorMsg=e.data.error):!0===e.data.success&&(n.showInsuraceError=!1,n.insuraceList=e.data.insurance)}).catch(function(e){return alert(e)})},n.lisence={dvla:"",taxi_type:"",valid_till:""},n.addLisence=function(){e.addLisence(r.currentUser().email,n.lisence).then(function(t){if(t.data.error)n.lisenceError=!0,!0===t.data.error.isJoi?n.lisenceErrorMsg=t.data.error.details[0].message:n.lisenceErrorMsg=t.data.error;else{n.lisenceError=!1;var s={update_at:"lisence",email:r.currentUser().email,status:!0};e.updateUserStatus(s).then(function(e){!0===e.data.updated?a.reload():(n.lisenceError=!0,n.lisenceErrorMsg="Failed to update user status for vehicle. Contact admin")}).catch(function(e){return alert(e)})}}).catch(function(e){return alert(e)})},n.showLisence=function(){e.userLisence(r.currentUser().email).then(function(e){e.data.error?(n.lisenceLoadError=!0,!0===e.data.error.isJoi?n.lisenceLoadErrorMsg=e.data.error.details[0].message:n.lisenceLoadErrorMsg=e.data.error):(n.lisenceLoadError=!1,n.lisenceInfo=e.data.lisence)}).catch(function(e){return alert(e)})}):t.path("/signin")}angular.module("etaxi").controller("settingsCtrl",e),e.$inject=["userservice","authentication","$location","$route"]}();
"use strict";!function(){function e(e,n,t,a,r){var s=this;e.isLoggedIn()?(s.composeOn=!1,s.singleMessage=!1,s.inboxOn=!0,s.sentboxOn=!1,"admin"===e.currentUser().account_type?(s.loadAdminContactList=!0,s.loadAccountantContactList=!1):"accountant"===e.currentUser().account_type?(s.loadAdminContactList=!1,s.loadAccountantContactList=!0):(s.loadAdminContactList=!1,s.loadAccountantContactList=!1),s.loadContact=function(){t.loadUserContact(e.currentUser().email).then(function(e){e.data.success&&(s.contacts=e.data.contacts[0].appContact.filter(function(e){return"taxiadmin@taxiaccounting.co.uk"!==e.contactEmail}))}).catch(function(e){alert(e)})},s.turnComposeOn=function(){s.composeOn=!0,s.sentboxOn=!1,s.inboxOn=!1,s.singleMessage=!1},s.turnSentOn=function(){s.sentboxOn=!0,s.composeOn=!1,s.inboxOn=!1,s.singleMessage=!1},s.turnInboxOn=function(){s.inboxOn=!0,s.sentboxOn=!1,s.composeOn=!1,s.singleMessage=!1},s.turnComposeOff=function(){s.composeOn=!1,s.inboxOn=!0},s.createMessage={sender:e.currentUser().email,receiver:"",subject:"",message:""},s.sendMessage=function(){t.sendMessage(s.createMessage).then(function(e){e.data.error?(s.msgError=!0,s.msgErrorMessage=e.data.error):!0===e.data.success&&(s.msgError=!1,setTimeout(function(){a.reload()},1e3))}).catch(function(e){return alert(e)})},s.loadInbox=function(){t.viewAllMessage(e.currentUser().email).then(function(e){e.data.error?(s.inboxLoadError=!0,s.inboxLoadErrorMessage=e.data.error):!0===e.data.success&&(s.inboxLoadError=!1,e.data.message.length>0?s.messages=e.data.message:s.emptyInbox=!0)}).catch(function(e){return alert(e)})},s.loadSentBox=function(){t.viewAllSentMessage(e.currentUser().email).then(function(e){e.data.error?(s.sentboxLoadError=!0,s.sentBoxLoadErrorMessage=e.data.error):!0===e.data.success&&(s.sentboxLoadError=!1,e.data.message.length>0?s.sentMessages=e.data.message:s.emptySentBox=!0)}).catch(function(e){return alert(e)})},s.viewMessage=function(e){s.inboxOn=!1,s.sentboxOn=!1,s.singleMessage=!0,t.viewSingleMessage(e).then(function(e){e.data.error?(s.singleMessageError=!0,s.singleMessageErrorMessage=e.data.error):(console.log(e),s.singleMessageError=!1,s.singleMessageData=e.data.message)}).catch(function(e){return alert(e)})},s.replyMessage=function(e,n,a){s.replyOn=!0,s.replyMessage={reply:"",sender:a,receiver:n},s.sendReply=function(){t.sendReply(e,s.replyMessage).then(function(e){e.data.error?(s.replyError=!0,s.replyErrorMsg=e.data.error):e.data.success&&(s.replyError=!1)}).catch(function(e){alert(e)})}}):n.path("/signin")}angular.module("etaxi").controller("msgController",e),e.$inject=["authentication","$location","userservice","$route","$routeParams"]}();
"use strict";!function(){function t(t,n,r){var a=this;n.isLoggedIn()&&"admin"===n.currentUser().account_type?(a.initialUserManagement=function(){t.showUsers().then(function(t){t.data.error?(a.countError=!0,a.countErrorMsg=t.data.error):(a.countError=!1,a.userCount=t.data.count)}).catch(function(t){})},a.search={query:""},a.searchUser=function(){t.searchUser(a.search.query).then(function(t){t.data.error?(a.searchError=!0,a.searchErrorMsg=t.data.error):(a.searchError=!1,a.searchResults=t.data.results)}).catch(function(t){alert(t)})},a.initAccounantManagement=function(){t.checkAccountantCollection().then(function(t){t.data.error?a.accountantLoadError=!0:(a.accountantLoadError=!1,0===t.data.accountant.length?a.noAccountant=!0:(a.noAccountant=!1,a.accountantsList=t.data.accountant))}).catch(function(t){return alert(t)}),a.accountant={profile:{name:"",email:"",mobile:""},company:{company_name:"",address:"",tel:"",company_email:"",website:""}},a.addAccountant=function(){t.addAccountant(a.accountant).then(function(t){t.data.error?(a.addAccountantError=!0,a.addAccountantErrorMsg=t.data.error):a.addAccountantError=!1}).catch(function(t){return alert(t)})}}):r.path("/signin")}angular.module("etaxi").controller("ctrlController",t),t.$inject=["userservice","authentication","$location"]}();
"use strict";!function(){function t(t,n,a,c,o){if(t.isLoggedIn()&&"admin"===t.currentUser().account_type){var r=this;r.weHaveCustomers=!1,r.userDetails=function(){n.getSingleCustomerDetails(c.userid).then(function(t){t.data.success?(r.userLoaded=!0,r.user=t.data.user):r.userLoaded=!1}).catch(function(t){alert(t)})},r.showAccountants=function(){a.accountants().then(function(t){t.data.error?(r.loadAccountantError=!0,r.loadAccountantErrorMsg="Unable to load accountant(s)"):(r.loadAccountantError=!1,r.accountants=t.data.accountants,r.accountants.forEach(function(t){t.customers.forEach(function(t){t.customerid===r.user.email&&(r.weHaveCustomers=!0)})}))}).catch(function(t){alert(t)})},r.assignAccountant=function(t){a.assignAccountantToUser(t,c.userid).then(function(t){t.data.error?(r.accountantAssignmentError=!0,r.accountantAssignmentErrorMsg=t.data.error):(r.accountantAssignmentError=!1,r.weHaveCustomers=!0,r.accountant=t.data.accountant)}).catch(function(t){alert(t)})}}else o.path("/signin")}angular.module("etaxi").controller("usrManageCtrl",t),t.$inject=["authentication","userservice","adminoperation","$routeParams","$location"]}();
"use strict";!function(){function t(t,n,c,a,o){if(t.isLoggedIn()&&"admin"===t.currentUser().account_type){var e=this;e.loadAccountant=function(){e.AccountantId=c.accountantId,n.accountantProfile(e.AccountantId).then(function(t){e.accountantInfo=t.data.accountant,e.accountantInfo.customers.length<1?e.noCustomers=!0:e.noCustomers=!1}).catch(function(t){return alert(t)})},e.createLoginForAccountant=function(){e.accountantLoginInfo={email:e.accountantInfo.email,account_type:"accountant"},n.createAccountantLogin(e.accountantLoginInfo).then(function(t){t.data.success?(e.accountantCreationSuccess=!0,e.accountantCreationError=!1,e.accountantCreationSuccessMsg="Account successfully create. \n\t\t\t\t\t\t\tAsk accountant to check "+e.accountantLoginInfo.email,setTimeout(function(){e.UpdateAccountantLoginCreated()},500)):(e.accountantCreationError=!0,e.accountantCreationSuccess=!1,e.accountantCreationErrorMsg=t.data.error)}).catch(function(t){alert(t)})},e.UpdateAccountantLoginCreated=function(){n.updateLoginAccountantCreation(c.accountantId).then(function(t){t.data.success&&o.reload()}).catch(function(t){alert(t)})}}else a.path("/signin")}angular.module("etaxi").controller("accountantCtrl",t),t.$inject=["authentication","userservice","$routeParams","$location","$route"]}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
