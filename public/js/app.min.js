"use strict";!function(){angular.module("etaxi",["ngResource","ngRoute","720kb.datepicker"]).config(["$routeProvider","$locationProvider",function(e,l){e.when("/",{templateUrl:"home/home.view.html",controller:"homeCtrl",controllerAs:"hmvm"}).when("/services",{templateUrl:"services/services.view.html",controller:"servicesCtrl",controllerAs:"srvm"}).when("/price",{templateUrl:"price/price.view.html",controller:"priceCtrl",controllerAs:"prvm"}).when("/aboutus",{templateUrl:"aboutus/aboutus.view.html"}).when("/contactus",{templateUrl:"contactus/contactus.view.html",controller:"contactusCtrl",controllerAs:"ctvm"}).when("/signup",{templateUrl:"signup/signup.view.html",controller:"signCtrl",controllerAs:"sgnvm"}).when("/signin",{templateUrl:"signin/signin.view.html",controller:"signinCtrl",controllerAs:"lgvm"}).when("/dashboard",{templateUrl:"dashboard/dashboard.view.html",controller:"dashboardCtrl",controllerAs:"dsvm"}).when("/businessprofile",{templateUrl:"dashboard/businessprofile/businessprofile.view.html",controller:"businessProfileCtrl",controllerAs:"bsvm"}).when("/serviceplan",{templateUrl:"dashboard/serviceplan/serviceplan.view.html",controller:"servicePlanCtrl",controllerAs:"srvm"}).when("/income",{templateUrl:"dashboard/income/income.view.html",controller:"incomeCtrl",controllerAs:"invm"}).when("/allincomestatements",{templateUrl:"dashboard/allincomestatements/allincomestatements.view.html",controller:"allincomeStatmentController",controllerAs:"inStmt"}).when("/expense",{templateUrl:"dashboard/expense/expense.view.html",controller:"expenseCtrl",controllerAs:"exvm"}).when("/financialstatement",{templateUrl:"dashboard/financialstatement/financialstatement.view.html",controller:"financeCtrl",controllerAs:"fstvm"}).when("/settings",{templateUrl:"dashboard/settings/settings.view.html",controller:"settingsCtrl",controllerAs:"stvm"}).when("/profile",{templateUrl:"profile/profile.view.html",controller:"profileCtrl",controllerAs:"prvm"}).when("/forgotpassword",{templateUrl:"forgotpassword/forgotpassword.view.html",controller:"forgotPasswordController",controllerAs:"frp"}),l.html5Mode({enabled:!0})}])}();
"use strict";!function(){function t(t,n){var e=function(n){t.localStorage.etaxitkn=n},o=function(){return t.localStorage.etaxitkn},i=function(){var n,e=o();return!!e&&(n=e.split(".")[1],n=t.atob(n),n=JSON.parse(n))};return{currentUser:function(){if(i()){var n=o().split(".")[1];return n=t.atob(n),n=JSON.parse(n),{email:n.email,account_type:n.account_type}}return!1},saveToken:e,getToken:o,isLoggedIn:i,register:function(t){return n.post("/api/register",t).success(function(t){e(t.token)})},login:function(t){return n.post("/api/login",t).success(function(t){e(t.token)})},logout:function(){t.localStorage.removeItem("etaxitkn")}}}angular.module("etaxi").service("authentication",t),t.$inject=["$window","$http"]}();
"use strict";!function(){function t(t){function n(t){return t}function e(t){return t}return{showUser:function(c){return t.get("/api/"+c+"/user").then(n).catch(e)},getUserStatus:function(c){return t.get("/api/userstatus/"+c).then(n).catch(e)},saveProfile:function(c,a){return t.post("/api/saveprofile/"+c,a).then(n).catch(e)},updateUserStatus:function(c){return t.post("/api/userstatus/",c).then(n).catch(e)},getProfile:function(c){return t.get("/api/userprofile/"+c).then(n).catch(e)},updateAddress:function(c,a){return t.post("/api/updateaddress/"+c,a).then(n).catch(e)},addExpense:function(c,a){return t.post("/api/addexpense/"+c,a).then(n).catch(e)},showExpenseSummary:function(c){return t.get("/api/showexpense/"+c).then(n).catch(e)},addIncome:function(c,a){return t.post("/api/"+c+"/addincome",a).then(n).catch(e)},showIncome:function(c){return t.get("/api/"+c+"/showincome").then(n).catch(e)},deleteIncome:function(c,a){return t.delete("/api/"+c+"/"+a+"/deleteincome").then(n).catch(e)},showSingleIncome:function(c,a){return t.get("/api/"+c+"/getincome/"+a).then(n).catch(e)},updateIncomeStatement:function(c,a,i){return t.patch("/api/"+c+"/updateincome/"+a,i).then(n).catch(e)},addAdditionalInformation:function(c,a){return t.post("/api/addaditionalinfo/"+c,a).then(n).catch(e)},addContactDetails:function(c,a){return t.post("/api/"+c+"/addcontact/",a).then(n).catch(e)},showContact:function(c){return t.get("/api/showcontact/"+c).then(n).catch(e)},addBusinessInfo:function(c,a){return t.post("/api/"+c+"/addbusinessinfo/",a).then(n).catch(e)},showBusinessBasic:function(c){return t.get("/api/"+c+"/showbusinessinfo").then(n).catch(e)},addVehicleInfo:function(c,a){return t.post("/api/"+c+"/addvehicle",a).then(n).catch(e)},showVehicle:function(c){return t.get("/api/"+c+"/showvehicle").then(n).catch(e)},addInsurance:function(c,a){return t.post("/api/"+c+"/insurance",a).then(n).catch(e)},showInsurance:function(c){return t.get("/api/"+c+"/insurance").then(n).catch(e)},addLisence:function(c,a){return t.post("/api/"+c+"/lisence",a).then(n).catch(e)},userLisence:function(c){return t.get("/api/"+c+"/lisence").then(n).catch(e)},exportToCSV:function(c,a){return t.get("/api/"+c+"/"+a).then(n).catch(e)}}}angular.module("etaxi").service("userservice",t),t.$inject=["$http"]}();
"use strict";!function(){function t(t){function n(t){return t}function e(t){return t}return{contactMessage:function(c){return t.post("/api/contact",c).then(n).catch(e)}}}angular.module("etaxi").service("systemService",t),t.$inject=["$http"]}();
"use strict";!function(){function t(t){function n(t){return t}function e(t){return t}return{passwordResetLink:function(r,u){return t.post("/api/"+r+"/"+u+"/passwordresetlink").then(n).catch(e)},validateResetKey:function(r,u,c){return t.get("/api/"+c+"/"+r+"/"+u).then(n).catch(e)},updatePassword:function(r,u,c){return t.put("/api/"+r+"/"+u+"/"+c).then(n).catch(e)}}}angular.module("etaxi").service("account",t),t.$inject=["$http"]}();
"use strict";!function(){angular.module("etaxi").directive("siteNav",function(){return{restrict:"EA",templateUrl:"common/directives/navigation/navigation.template.html",controller:"navCtrl as nvm"}})}();
"use strict";!function(){function t(t,e,n){var r=this;r.loggedIn=e.isLoggedIn(),r.logout=function(){e.logout(),t.path("/signin")},e.isLoggedIn()&&n.getUserStatus(e.currentUser().email).then(function(t){t.data.status&&!0===t.data.status.statusCollection[0].profile&&n.getProfile(e.currentUser().email).then(function(t){!0===t.data.success?(r.userProfileOn=!0,r.userProfile=t.data.profile.profile,r.username=r.userProfile[0].first_name+" "+r.userProfile[0].last_name):r.userProfileOn=!1}).catch(function(t){alert(t)})}).catch(function(t){alert(t)})}angular.module("etaxi").controller("navCtrl",t),t.$inject=["$location","authentication","userservice"]}();
"use strict";!function(){angular.module("etaxi").directive("siteFooter",function(){return{restrict:"EA",templateUrl:"common/directives/site-footer/sitefooter.template.html"}})}();
"use strict";!function(){angular.module("etaxi").controller("homeCtrl",function(){})}();
"use strict";!function(){angular.module("etaxi").controller("servicesCtrl",function(){})}();
"use strict";!function(){angular.module("etaxi").controller("priceCtrl",function(){})}();
"use strict";!function(){function e(e){var r=this;r.message={name:"",email:"",body:""},r.sendMessage=function(){e.contactMessage(r.message).then(function(e){e.data.error?(r.messageError=!0,r.messageErrorMsg=e.data.error):(r.messageError=!1,r.messageErrorMsg="We have received your request. We will be in touch soon")}).catch(function(e){return alert(e)})}}angular.module("etaxi").controller("contactusCtrl",e),e.$inject=["systemService"]}();
"use strict";!function(){function r(r,e){var o=this;o.newuser={email:"",password:""},o.error=!1,o.createAccount=function(){o.newuser.email&&o.newuser.password?(o.error=!1,o.doRegister()):(o.error=!0,o.errorMessage="All fields are required. Must not be empty")},o.doRegister=function(){e.register(o.newuser).error(function(r){o.error=!0,o.errorMessage=r.error}).then(function(e){r.path("/dashboard")})},e.isLoggedIn()&&r.path("/dashboard")}angular.module("etaxi").controller("signCtrl",r),r.$inject=["$location","authentication"]}();
"use strict";!function(){function r(r,e){var o=this;o.user={email:"",password:""},o.error=!1,o.letLogin=function(){o.user.email&&o.user.password?(o.error=!1,o.doLogin()):(o.error=!0,o.errorMessage="All fields required. Must not be empty")},o.doLogin=function(){r.login(o.user).error(function(r){o.error=!0,o.errorMessage=r.error}).then(function(){e.path("/dashboard")})},r.isLoggedIn()&&e.path("/dashboard")}angular.module("etaxi").controller("signinCtrl",r),r.$inject=["authentication","$location"]}();
"use strict";!function(){function r(r,s,e,a){var t=this;e.v&&e.hack&&e.for?(t.passResetForm=!0,t.passResetRequest=!1):(t.passResetRequest=!0,t.passResetForm=!1),t.user={email:""},t.checkUser=function(){if(!t.user.email)return t.resetPassError=!0,void(t.resetPassErrorMsg="Please enter email address first");t.loading=!0,t.btnDisabled=!0,r.showUser(t.user.email).then(function(r){r.data.error?(t.resetPassError=!0,!0===r.data.error.isJoi?t.resetPassErrorMsg=r.data.error.details[0].message:t.resetPassErrorMsg=r.data.error):(t.resetPassError=!1,setTimeout(function(){s.passwordResetLink(t.user.email,r.data.user._id).then(function(r){r.data.error?(t.resetPassError=!0,t.resetPassErrorMsg=r.data.error):(t.loading=!1,t.btnDisabled=!1,t.resetPassError=!1,t.resetSuccessLink=!0,t.resetPassSuccessMsg="We have sent you a password reset link. Please check your email")}).catch(function(r){return alert(r)})},3e3))}).catch(function(r){return alert(r)})},t.validateKey=function(){s.validateResetKey(e.v,e.hack,e.for).then(function(r){!0===r.data.success?t.passwordChangeOn=!0:t.passwordChangeOn=!1}).catch(function(r){return alert(r)})},t.newpasswordinfo={newpassword:"",repeatpassword:""},t.updatePassword=function(){t.newpasswordinfo.newpassword!==t.newpasswordinfo.repeatpassword?(t.updatePassError=!0,t.updatePassErrorMsg="Error! New password and Repeat Password doesn't match."):s.updatePassword(e.for,t.newpasswordinfo.newpassword,t.newpasswordinfo.repeatpassword).then(function(r){r.data.error?(t.updatePassError=!0,t.updatePassErrorMsg=r.data.error):!0===r.data.success&&(t.updatePassError=!1,a.path("/signin"))}).catch(function(r){return alert(r)})}}angular.module("etaxi").controller("forgotPasswordController",r),r.$inject=["userservice","account","$routeParams","$location"]}();
"use strict";!function(){function t(t,e,r,o){var a=this;t.isLoggedIn()?(a.getUserStatusCollection=function(){r.getUserStatus(t.currentUser().email).then(function(e){e.data.error?a.profileLoadError=!0:e.data.status&&(a.profileLoadError=!1,a.profileOn=e.data.status.statusCollection[0].profile,console.log(e.data.status),a.additionInfo=e.data.status.statusCollection[0].additional_info,r.getProfile(t.currentUser().email).then(function(t){t.data.error?(a.personalProfile=!0,a.addressEditForm=!1):t.data.success&&(a.addressEditForm=!1,a.personalProfile=!1,a.showPersonalProfile=!0,a.personProfileDetails=t.data.profile,a.showAddress=!0)}).catch(function(t){alert(t)}))}).catch(function(t){alert(t)})},a.editAddress=function(){a.showAddress=!1,a.addressEditForm=!0},a.personDetails={house_number:"",street_name:"",post_code:"",city:"",county:""},a.saveAddressChange=function(t){a.personDetails.house_number&&a.personDetails.street_name&&a.personDetails.post_code&&a.personDetails.city&&a.personDetails.county?(a.editAddressError=!1,r.updateAddress(t,a.personDetails).then(function(t){t.data.error?(a.editAddressError=!0,a.erroMessage=t.data.error):t.data.success&&(a.editAddressError=!1,o.reload())}).catch(function(t){alert(t)})):(a.editAddressError=!0,a.erroMessage="Error! All fields are required")},a.cancelAddressForm=function(){a.showAddress=!0,a.addressEditForm=!1},a.niUti={ni_number:"",uti_number:""},a.addAdditionalInfo=function(e){a.niUti.ni_number&&a.niUti.uti_number?(a.additionalInfoError=!1,r.addAdditionalInformation(e,a.niUti).then(function(e){e.data.error?(a.additionalInfoError=!0,a.errorMessage=e.data.error):e.data.additionalInfo&&(a.updatedStatus={update_at:"additional_info",email:t.currentUser().email,status:!0},r.updateUserStatus(a.updatedStatus).then(function(t){!0===t.data.updated?a.showAdditionalInfo=!0:(a.showAdditionalInfo=!1,a.additionalInfoError=!0,a.errorMessage="Something went wrong with updating user collection status. Contact admin")}).catch(function(t){alert("Error while updating user status collection\t:"+t)}))}).catch(function(t){alert(t)})):(a.additionalInfoError=!0,a.errorMessage="All fields are required. Must not be empty")}):e.path("/signin")}angular.module("etaxi").controller("profileCtrl",t),t.$inject=["authentication","$location","userservice","$route"]}();
"use strict";!function(){function e(e,r,t){var a=this;e.isLoggedIn()?"customer"===e.currentUser().account_type?(a.getUserStatus=function(){t.getUserStatus(e.currentUser().email).then(function(e){e.data.error?(a.statusError=!0,a.statusErrorMessage=e.data.error):e.data.status&&(a.statusCollection=e.data.status.statusCollection)}).catch(function(e){alert(e)})},a.getUserStatus(),a.userProfile={first_name:"",last_name:"",house_no:"",street_name:"",city_name:"",county:"",postcode:""},a.createProfile=function(){a.showAjaxLoader=!0,a.btnDisabled=!0,a.userProfile.first_name&&a.userProfile.last_name&&a.userProfile.house_no&&a.userProfile.street_name&&a.userProfile.city_name&&a.userProfile.county&&a.userProfile.postcode?(a.profileError=!1,setTimeout(function(){a.showAjaxLoader=!1,a.btnDisabled=!1,t.saveProfile(e.currentUser().email,a.userProfile).then(function(r){if(r.data.error)a.profileError=!0,a.profileErrorMessage=r.data.error;else if(r.data.profile){a.profileError=!1,a.profileSuccess=!0,a.successMessage="Your profile successfully created";var t={update_at:"profile",email:e.currentUser().email,status:!0};!1===a.updateStatus(t)?(a.profileError=!0,a.profileErrorMessage="Something went wrong, updating your profile. Please contact admin"):a.getUserStatus()}}).catch(function(e){alert(e)})},500)):(a.profileError=!0,a.profileErrorMessage="All fields are required. Must not be empty",a.showAjaxLoader=!1,a.btnDisabled=!1)},a.updateStatus=function(e){var r=void 0;return t.updateUserStatus(e).then(function(e){r=!0===e.data.updated}).catch(function(e){alert(e)}),r}):e.currentUser().status:r.path("/signin")}angular.module("etaxi").controller("dashboardCtrl",e),e.$inject=["authentication","$location","userservice"]}();
"use strict";!function(){angular.module("etaxi").controller("businessProfileCtrl",function(){})}();
"use strict";!function(){function n(n,i){var t=this;n.isLoggedIn()?t.loadServicePlan=function(n){t.service_plan=!0,t.plan=n}:i.path("/signin")}angular.module("etaxi").controller("servicePlanCtrl",n),n.$inject=["authentication","$location"]}();
"use strict";!function(){function e(e,n){function t(e){var n=e.getDate(),t=e.getMonth()+1,o=e.getFullYear();return n<10&&(n="0"+n),t<10&&(t="0"+t),e=n+"-"+t+"-"+o}function o(){for(var e=[],n=0;n<7;n++){var o=new Date;o.setDate(o.getDate()-n),e.push(t(o))}return e}var c=this;c.Income={amount:"",incomeDate:"",income_source:""},c.addIncome=function(){c.Income.amount&&c.Income.income_source?(c.incomeError=!1,n.addIncome(e.currentUser().email,c.Income).then(function(e){!0===e.data.success&&(c.incomeError=!1,c.incomeSuccess=!0,c.successMgs="£ "+c.Income.amount+" Successfully added",c.showIncome())}).catch(function(e){alert(e)})):(c.incomeError=!0,c.incomeErrorMsg="All * fields are required")},c.showIncome=function(){c.initialError=!0,c.totalIncome=0;n.showIncome(e.currentUser().email).then(function(e){if(!0===e.data.success){c.initialError=!1,c.showTotalIncome=!0,c.incomeList=e.data.data;for(var n=0;n<c.incomeList.length;n++)c.totalIncome+=parseFloat(c.incomeList[n].income);var t=o().map(function(e){return c.incomeList.filter(function(n){return n.incomeDate===e})});c.weeklyIncome=t.filter(function(e){return e.length>0})}}).catch(function(e){return function(){alert(e)}})}}angular.module("etaxi").controller("incomeCtrl",e),e.$inject=["authentication","userservice"]}();
"use strict";!function(){function e(e,t,a,o){var n=this;e.isLoggedIn()?(n.showIncomeList=!0,n.showEditArea=!1,n.loadAllIncomeStatements=function(){t.showIncome(e.currentUser().email).then(function(e){if(!0===e.data.success){n.weHaveIncomes=!0,e.data.data.length<1&&(n.weHaveNoIncome=!0),n.incomesList=e.data.data;for(var t=0,a=0;a<n.incomesList.length;a++)t+=parseFloat(n.incomesList[a].income);n.totalIncomes=t}else e.data.error&&(n.weHaveIncomes=!1)}).catch(function(e){alert(e)})},n.editIncome=function(a){n.showEditArea=!0,n.showIncomeList=!1,t.showSingleIncome(e.currentUser().email,a).then(function(e){e.data.error?(n.editDataLoadError=!0,n.editDataLoadErrorMessage=e.data.error):!0===e.data.success&&(n.editDataLoadError=!1,n.incomeEdit={incomeDate:o("date")(e.data.data.incomeDate,"yyyy-MM-dd"),amount:e.data.data.income,income_source:e.data.data.incomeType})}).catch(function(e){alert(e)}),n.saveEditIncome=function(){n.incomeEdit.incomeDate&&n.incomeEdit.amount&&n.incomeEdit.income_source?(n.editFormValidationError=!1,t.updateIncomeStatement(e.currentUser().email,a,n.incomeEdit).then(function(e){!0===e.data.success?(n.showEditArea=!1,n.showIncomeList=!0):e.data.error&&(n.editFormValidationError=!0,n.editFormValidationErrorMessage=e.data.data.error)}).catch(function(e){alert(e)})):(n.editFormValidationError=!0,n.editFormValidationErrorMessage="All fields are requied. Must not be empty")}},n.cancelEdit=function(){n.showEditArea=!1,n.showIncomeList=!0},n.deleteStatement=function(a){t.deleteIncome(e.currentUser().email,a).then(function(e){!0===e.data.success?(n.loadAllIncomeStatements(),n.deletingError=!1):e.data.error&&(n.deletingError=!0)}).catch(function(e){alert(e)})}):a.path("/signin")}angular.module("etaxi").controller("allincomeStatmentController",e),e.$inject=["authentication","userservice","$location","$filter"]}();
"use strict";!function(){function e(e,n){function r(e){var n=new Date(e),r=""+(n.getMonth()+1),t=""+n.getDate(),s=n.getFullYear();return r.length<2&&(r="0"+r),t.length<2&&(t="0"+t),[s,r,t].join("-")}function t(e){var n=e.getDate(),r=e.getMonth()+1,t=e.getFullYear();return n<10&&(n="0"+n),r<10&&(r="0"+r),e=t+"-"+r+"-"+n}function s(){for(var e=[],n=0;n<7;n++){var r=new Date;r.setDate(r.getDate()-n),e.push(t(r))}return e}var a=this;a.expense={startDate:"",expense_sector:"",amount:""},a.addExpense=function(){a.expense&&a.expense.expense_sector&&a.expense.amount?(a.expenseError=!1,n.addExpense(e.currentUser().email,a.expense).then(function(e){e.data.error?(a.expenseError=!0,a.errorMessage="Error while adding expenses for the user"):(a.expenseError=!1,a.expenseSuccess=!0,a.expenseSuccessMessage="£ "+a.expense.amount+" successfully added for "+a.expense.expense_sector,a.loadExpenseSummary())}).catch(function(e){alert(e)})):(a.expenseError=!0,a.expenseSuccess=!1,a.errorMessage="All fields required. Must not be empty")},a.loadExpenseSummary=function(){n.showExpenseSummary(e.currentUser().email).then(function(e){if(!0===e.data.success){a.expenseSummaryError=!1,a.expenseSummarySuccess=!0,a.expensesList=e.data.expense;for(var n=0,t=0;t<a.expensesList.length;t++)n+=parseFloat(a.expensesList[t].amount);a.totalAmount=n;var u=s().map(function(e){return a.expensesList.filter(function(n){return r(n.createdAt)===e})});a.weeklyExpense=u.filter(function(e){return e.length>0})}else e.data.error&&(a.expenseSummaryError=!0)}).catch(function(e){alert(e)})}}angular.module("etaxi").controller("expenseCtrl",e),e.$inject=["authentication","userservice"]}();
"use strict";!function(){function e(e,n){var t=this;t.loadIncome=function(){t.totalIncome=0,n.showIncome(e.currentUser().email).then(function(e){if(!0===e.data.success){t.incomeList=e.data.data;for(var n=0;n<t.incomeList.length;n++)t.totalIncome+=parseFloat(t.incomeList[n].income);var r=t.incomeList.filter(function(e){return"cash"===e.incomeType});t.totalCash=r.reduce(function(e,n){return e+n.income},0);var o=t.incomeList.filter(function(e){return"card"===e.incomeType});t.totalCard=o.reduce(function(e,n){return e+n.income},0);var c=t.incomeList.filter(function(e){return"account"===e.incomeType});t.totalAccountIncome=c.reduce(function(e,n){return e+n.income},0)}}).catch(function(e){return function(){alert(e)}})},t.loadExpense=function(){t.totalExpense=0,n.showExpenseSummary(e.currentUser().email).then(function(e){if(!0===e.data.success){t.expensesList=e.data.expense;for(var n=0;n<t.expensesList.length;n++)t.totalExpense+=parseFloat(t.expensesList[n].amount);var r=t.expensesList.filter(function(e){return"oil"===e.expense_sector});t.oilExpense=r.reduce(function(e,n){return e+n.amount},0);var o=t.expensesList.filter(function(e){return"fuel"===e.expense_sector});t.fuelTotalCost=o.reduce(function(e,n){return e+n.amount},0);var c=t.expensesList.filter(function(e){return"road_tax"===e.expense_sector});t.roadTax=c.reduce(function(e,n){return e+n.amount},0);var s=t.expensesList.filter(function(e){return"insurance"===e.expense_sector});t.insuranceCost=s.reduce(function(e,n){return e+n.amount},0);var u=t.expensesList.filter(function(e){return"repair"===e.expense_sector});t.repairCost=u.reduce(function(e,n){return e+n.amount},0);var i=t.expensesList.filter(function(e){return"car_rent"===e.expense_sector});t.carRentCost=i.reduce(function(e,n){return e+n.amount},0);var a=t.expensesList.filter(function(e){return"car_finance"===e.expense_sector});t.carFinanceCost=a.reduce(function(e,n){return e+n.amount},0);var f=t.expensesList.filter(function(e){return"car_wash"===e.expense_sector});t.carWashCost=f.reduce(function(e,n){return e+n.amount},0);var l=t.expensesList.filter(function(e){return"mot"===e.expense_sector});t.motCost=l.reduce(function(e,n){return e+n.amount},0);var p=t.expensesList.filter(function(e){return"tyres"===e.expense_sector});t.tyresCost=p.reduce(function(e,n){return e+n.amount},0);var m=t.expensesList.filter(function(e){return"phone"===e.expense_sector});t.phoneCost=m.reduce(function(e,n){return e+n.amount},0);var x=t.expensesList.filter(function(e){return"accountancy"===e.expense_sector});t.accountancyCost=x.reduce(function(e,n){return e+n.amount},0);var d=t.expensesList.filter(function(e){return"other"===e.expense_sector});t.otherCost=d.reduce(function(e,n){return e+n.amount},0)}}).catch(function(e){alert(e)})},t.exportAsPDF=function(){html2canvas(document.getElementById("incomeStatement"),{onrendered:function(e){var n={content:[{image:e.toDataURL(),width:500}]};pdfMake.createPdf(n).download("financial-statement.pdf")}})}}angular.module("etaxi").controller("financeCtrl",e),e.$inject=["authentication","userservice"]}();
"use strict";!function(){function r(r,e,t,a){var n=this;e.isLoggedIn()?(n.userSetting=function(){r.getUserStatus(e.currentUser().email).then(function(r){r.data.error?n.initialError=!0:(n.initialError=!1,n.contactSettingOn=r.data.status.statusCollection[0].contact,n.addContact(),n.businessSettingOn=r.data.status.statusCollection[0].business,n.vehicleSettingOn=r.data.status.statusCollection[0].vehicle,n.insuranceSettingOn=r.data.status.statusCollection[0].insurance,n.lisenceSettingOn=r.data.status.statusCollection[0].lisence)}).catch(function(r){return alert(r)})},n.contact={mobile:"",landline:""},n.addContact=function(){n.contact.mobile?(n.addContactError=!1,r.addContactDetails(e.currentUser().email,n.contact).then(function(t){if(t.data.error)n.addContactError=!0,n.addContactErrorMessage=t.data.error.name;else{var s={update_at:"contact",email:e.currentUser().email,status:!0};r.updateUserStatus(s).then(function(r){!0===r.data.updated?a.reload():(n.addContactError=!0,n.addContactErrorMessage="Error! while updating status collection")}).catch(function(r){return alert(r)})}}).catch(function(r){return alert(r)})):(n.addContactError=!0,n.addContactErrorMessage="All * fields are required")},n.showContactDetails=function(){r.showContact(e.currentUser().email).then(function(r){console.log(e.currentUser().email),r.data.error?n.showContactError=!0:(n.showContactError=!1,n.userContactDetails=r.data.data)}).catch(function(r){return alert(r)})},n.businessInfo={name:"",type:""},n.addBusinessInfoSubmit=function(){r.addBusinessInfo(e.currentUser().email,n.businessInfo).then(function(t){if(t.data.error)n.business_infAddingError=!0,n.businessInfErMgm=t.data.error.name+" "+t.data.error.details[0].message;else{var s={update_at:"business",email:e.currentUser().email,status:!0};r.updateUserStatus(s).then(function(r){!0===r.data.updated?a.reload():n.business_infAddingError=!0}).catch(function(r){return alert(r)})}}).catch(function(r){return alert(r)})},n.showBusinessBasic=function(){r.showBusinessBasic(e.currentUser().email).then(function(r){r.data.error?(n.businessBasicInfoError=!0,n.businessBasicInfoErrorMsg=r.data.error):(n.businessBasicInfoError=!1,n.businessBasicInfoList=r.data.data)}).catch(function(r){return alert(r)})},n.vehicle={type:"",brand:"",registration:"",car_value:"",mot:"",roadtax:"",car_status:""},n.addVechicleDetails=function(){r.addVehicleInfo(e.currentUser().email,n.vehicle).then(function(t){if(t.data.error)n.vehicleError=!0,!0===t.data.error.isJoi?n.vehicleErrorMsg=t.data.error.details[0].message:n.vehicleErrorMsg=t.data.error;else if(!0===t.data.success){var s={update_at:"vehicle",email:e.currentUser().email,status:!0};r.updateUserStatus(s).then(function(r){!0===r.data.updated?a.reload():(n.vehicleError=!0,n.vehicleErrorMsg="Failed to update user status for vehicle. Contact admin")}).catch(function(r){return alert(r)})}}).catch(function(r){return alert(r)})},n.getVehicle=function(){r.showVehicle(e.currentUser().email).then(function(r){r.data.error?(n.showVehicleError=!0,n.showVehicleErrorMgm=r.data.error):!0===r.data.success&&(n.showVehicleError=!1,n.vehicleList=r.data.data)}).catch(function(r){return alert(r)})},n.insurance={name:"",valid_date:"",number:""},n.addInsurance=function(){r.addInsurance(e.currentUser().email,n.insurance).then(function(t){if(t.data.error)n.addInsuranceErr=!0,!0===t.data.error.isJoi?n.insuranceErrMgs=t.data.error.details[0].message:n.insuranceErrMgs=t.data.error;else if(!0===t.data.success){n.addInsuranceErr=!1;var s={update_at:"insurance",email:e.currentUser().email,status:!0};r.updateUserStatus(s).then(function(r){!0===r.data.updated?a.reload():(n.addInsuranceErr=!0,n.insuranceErrMgs="Failed to update user status for vehicle. Contact admin")}).catch(function(r){return alert(r)})}}).catch(function(r){return alert(r)})},n.showInsurance=function(){r.showInsurance(e.currentUser().email).then(function(r){r.data.error?(n.showInsuraceError=!0,!0===r.data.error.isJoi?n.showInsuraceErrorMsg=r.data.error.details[0].message:n.showInsuraceErrorMsg=r.data.error):!0===r.data.success&&(n.showInsuraceError=!1,n.insuraceList=r.data.insurance)}).catch(function(r){return alert(r)})},n.lisence={dvla:"",taxi_type:"",valid_till:""},n.addLisence=function(){r.addLisence(e.currentUser().email,n.lisence).then(function(t){if(t.data.error)n.lisenceError=!0,!0===t.data.error.isJoi?n.lisenceErrorMsg=t.data.error.details[0].message:n.lisenceErrorMsg=t.data.error;else{n.lisenceError=!1;var s={update_at:"lisence",email:e.currentUser().email,status:!0};r.updateUserStatus(s).then(function(r){!0===r.data.updated?a.reload():(n.lisenceError=!0,n.lisenceErrorMsg="Failed to update user status for vehicle. Contact admin")}).catch(function(r){return alert(r)})}}).catch(function(r){return alert(r)})},n.showLisence=function(){r.userLisence(e.currentUser().email).then(function(r){r.data.error?(n.lisenceLoadError=!0,!0===r.data.error.isJoi?n.lisenceLoadErrorMsg=r.data.error.details[0].message:n.lisenceLoadErrorMsg=r.data.error):(n.lisenceLoadError=!1,n.lisenceInfo=r.data.lisence)}).catch(function(r){return alert(r)})}):t.path("/signin")}angular.module("etaxi").controller("settingsCtrl",r),r.$inject=["userservice","authentication","$location","$route"]}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
